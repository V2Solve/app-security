{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/bottombar/bottombar.component.ts","./src/app/bottombar/bottombar.component.html","./src/app/topbar/topbar.component.ts","./src/app/topbar/topbar.component.html","./src/assets/domainmodel/domainmodel.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'adminapp';\n}\n","<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n\n<div id=\"topbar\">\n\t<app-topbar></app-topbar>\n</div>\n<div id=\"routerarea\">\n\t<router-outlet></router-outlet>\t\n</div>\n<div id=\"bottombar\">\n\t<app-bottombar></app-bottombar>\t\n</div>\n\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content above * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * End of Placeholder * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TopbarComponent } from './topbar/topbar.component';\nimport { BottombarComponent } from './bottombar/bottombar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TopbarComponent,\n    BottombarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError, Subscriber } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\nimport {SecurityAPIResponse,ContextAPIClient, SecurityAPIRequest} from 'src/assets/domainmodel/domainmodel'\n\n\n@Component({\n  selector: 'app-bottombar',\n  templateUrl: './bottombar.component.html',\n  styleUrls: ['./bottombar.component.css']\n})\nexport class BottombarComponent implements OnInit {\n\n   response: SecurityAPIResponse;\n   completeobject: string\n   http: HttpClient;\n\n  constructor(httpClient: HttpClient) \n  { \n    this.http = httpClient;\n  }\n\n  ngOnInit(): void \n  {\n    console.log(\"OnInit...\");\n    let request = new SecurityAPIRequest ();\n    request.callingClientId = \"saurinya@gmail.com\";\n    let apiClient = new ContextAPIClient(\"http://localhost:8080/v1/contextapi/getSecurityContext\",this.http);\n    apiClient.getSecurityContext(request);\n    let observable = apiClient.getSecurityContext(request);\n    observable.subscribe((value: SecurityAPIResponse) => {\n      this.response = value\n      this.completeobject = JSON.stringify(value);\n      console.log(\"Got Client response as : \" + this.response);\n      console.log(\"Got Client response stringy as : \" + this.completeobject);\n      console.log(\"Done set the response..\");\n    });\n  }\n\n}\n","<p>bottombar works and the response is as below..</p>\n{{completeobject}}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-topbar',\n  templateUrl: './topbar.component.html',\n  styleUrls: ['./topbar.component.css']\n})\nexport class TopbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<table style=\"width: 100%\">\n\t<tr>\n\t\t<td width=\"20%\">Logo</td>\n\t\t<td width=\"80%\">\n\t\t\t<table style=\"width: 100%\">\n\t\t\t\t<tr>\n\t\t\t\t\t<td align=\"center\">Applications</td>\n\t\t\t\t\t<td align=\"center\">Clients</td>\n\t\t\t\t\t<td align=\"center\">Action</td>\n\t\t\t\t\t<td align=\"center\">Resources</td>\n\t\t\t\t\t<td align=\"center\">Permissions</td>\n\t\t\t\t\t<td align=\"center\">Roles</td>\n\t\t\t\t\t<td align=\"center\">RolePermissions</td>\n\t\t\t\t\t<td align=\"center\">Groups</td>\n\t\t\t\t\t<td align=\"center\">GroupMemberships</td>\n\t\t\t\t\t<td align=\"center\">GroupRoles</td>\n\t\t\t\t\t<td align=\"center\">ResourceDomainsType</td>\n\t\t\t\t\t<td align=\"center\">ResourceDomains</td>\n\t\t\t\t\t<td align=\"center\">ScopeTypes</td>\n\t\t\t\t\t<td align=\"center\">Scopes</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</td>\n\t</tr>\n</table>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\n\r\nexport class Domain\r\n{\r\n\tdomainName: String;\r\n\tdomainType: String;\r\n}\r\n\r\nexport class Scope\r\n{\r\n\tscopeName: String;\r\n\tscopeType: String;\r\n\tscopeValue: String;\r\n}\r\n\r\n\r\nexport class RequestStatusInformation\r\n{\r\n\tstatusCode: String;\r\n\tstatusMessage: String;\r\n\t\r\n\tpublic static standardSuccessCode: String = \"Succeeded\";\r\n\tpublic static standardFailureCode: String = \"Failed\";\r\n\tpublic static standardSuccessMessage: String = \"Operation Succeeded\";\r\n\tpublic static standardFailureMessage: String = \"Operation Failed\";\r\n}\r\n\r\nexport class PagingInformation\r\n{\r\n\t// may be set in request or response\r\n\tcurrentPage: Number;\r\n\t\r\n\t// usually set in requests..\r\n\tpageSize: Number;\r\n\t\r\n\t// may be set in request or response..\r\n\tnoOfPages: Number;\r\n\t\r\n\t// may be set in the response\r\n\ttotalNoOfRecords: Number;\r\n\t\r\n\t// may be set in the response.\r\n\trecordsReturned: Number;\t\r\n}\r\n\r\nexport  class BaseRequest\r\n{\r\n\t/**\r\n\t * Unique Calling Client Id;\r\n\t */\r\n\tcallingClientId: String;\r\n\t\r\n\t/**\r\n\t * Additional groups that the client must be assumed to belong to \r\n\t *\r\n\t */\r\n\tgroups: Array<String>;\r\n\r\n\tpagingInfo: PagingInformation;\t\r\n}\r\n\r\n\r\nexport class BaseResponse\r\n{\r\n\t\r\n\t// will specific what the status is. (error, or success depending on the code)\r\n\tstatus: RequestStatusInformation;\r\n\t\r\n\t// In case of paging enabled the number of records returned could be held in here..\r\n\tpageInfo: RequestStatusInformation;\r\n}\r\n\r\n\r\nexport class CreateApplicationRequest extends BaseRequest\r\n{\r\n\tappIdentifier: String;\r\n\tappShortIdentifier: String;\r\n\tdescription: String;\r\n}\r\n\r\n\r\nexport  class CreateApplicationResponse extends BaseResponse\r\n{\r\n\t\r\n}\r\n\r\n\r\nexport  class SecurityAPIRequest extends BaseRequest\r\n{\r\n\t/**\r\n\t * Request Parameters - depending on the request some of these would be set.\r\n\t */\r\n\taction: String;\r\n\tresource: String;\r\n\troleName: String;\r\n\tgroupName: String;\r\n\tscope: Scope;\r\n\tresourceDomain: Domain;\t\r\n}\r\n\r\nexport class SecurityAPIResponse extends BaseResponse\r\n{\r\n\t/**\r\n\t * Used for true false type of return data..\r\n\t */\r\n\tresult: Boolean;\r\n\t\r\n\t// Group Names\r\n\tgroups: Array<String>;\r\n\t\r\n\t// Role Names;\r\n\troles: Array<String>;\r\n\t\r\n\t// Array of scopes\r\n\tscopes: Array<Scope>;\r\n}\r\n\r\n//options: {\r\n//    headers?: HttpHeaders | {[header: string]: string | string[]},\r\n//    observe?: 'body' | 'events' | 'response',\r\n//    params?: HttpParams|{[param: string]: string | string[]},\r\n//    reportProgress?: boolean,\r\n//    responseType?: 'arraybuffer'|'blob'|'json'|'text',\r\n//    withCredentials?: boolean,\r\n//  }\r\n\r\n@Injectable()\r\nexport class ContextAPIClient\r\n{\r\n\tendpointurl: string;\r\n\thttp: HttpClient;\t\t\r\n\t\r\n\tconstructor (endpoint: string,private httpClient: HttpClient)\r\n\t{\r\n\t\tthis.endpointurl = endpoint;\r\n\t\tthis.http = httpClient;\r\n\t} \r\n\t\r\n\thasGroup (request: SecurityAPIRequest) : SecurityAPIResponse\r\n\t{\r\n\t\tvar httpOptions : {};\r\n\r\n\t\tlet returndata: SecurityAPIResponse;\r\n\r\n\t\tthis.http.post<SecurityAPIResponse>(this.endpointurl,request,httpOptions).subscribe((data: SecurityAPIResponse)=>{\r\n\t\t\treturndata = data;\r\n\t\t})\r\n\r\n\t\treturn returndata;\r\n\t}\r\n\t\r\n\thasRole (request: SecurityAPIRequest) : SecurityAPIResponse\r\n\t{\r\n\t\treturn null;\r\n\t}\r\n\r\n\r\n\thasPermission (request: SecurityAPIRequest) : SecurityAPIResponse\r\n\t{\r\n\t\treturn null;\r\n\t}\r\n\r\n\r\n\thasPermissionInScope (request: SecurityAPIRequest) : SecurityAPIResponse\r\n\t{\r\n\t\treturn null;\r\n\t}\r\n\r\n\r\n\thasPermissionReturnGroups (request: SecurityAPIRequest) : SecurityAPIResponse\r\n\t{\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\thasPermissionReturnRoles (request: SecurityAPIRequest) : SecurityAPIResponse\r\n\t{\r\n\t\treturn null;\r\n\t}\r\n\r\n\thasPermissionReturnScopes (request: SecurityAPIRequest) : SecurityAPIResponse\r\n\t{\r\n\t\treturn null;\r\n\t}\r\n\r\n\tgetSecurityContext (request: SecurityAPIRequest) : Observable<SecurityAPIResponse>\r\n\t{\r\n\t\treturn this.http.post<SecurityAPIResponse>(this.endpointurl,request);\r\n\t}\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}