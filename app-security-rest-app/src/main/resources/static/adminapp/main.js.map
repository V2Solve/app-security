{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/action-mgmt/action-mgmt.component.ts","./src/app/action-mgmt/action-mgmt.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/application-mgmt/application-mgmt.component.ts","./src/app/application-mgmt/application-mgmt.component.html","./src/app/base-comps/commonforms.ts","./src/app/bottombar/bottombar.component.ts","./src/app/bottombar/bottombar.component.html","./src/app/client-group-management/client-group-management.component.ts","./src/app/client-group-management/client-group-management.component.html","./src/app/client-management/client-management.component.ts","./src/app/client-management/client-management.component.html","./src/app/client-to-groups/client-to-groups.component.ts","./src/app/client-to-groups/client-to-groups.component.html","./src/app/domain-management/domain-management.component.ts","./src/app/domain-management/domain-management.component.html","./src/app/domain-type-management/domain-type-management.component.ts","./src/app/domain-type-management/domain-type-management.component.html","./src/app/groups-to-roles/groups-to-roles.component.ts","./src/app/groups-to-roles/groups-to-roles.component.html","./src/app/info-block/info-block.component.ts","./src/app/info-block/info-block.component.html","./src/app/loader-interceptor.ts","./src/app/loader-service.service.ts","./src/app/permission-management/permission-management.component.ts","./src/app/permission-management/permission-management.component.html","./src/app/resource-management/resource-management.component.ts","./src/app/resource-management/resource-management.component.html","./src/app/results-table/results-table.component.ts","./src/app/results-table/results-table.component.html","./src/app/role-management/role-management.component.ts","./src/app/role-management/role-management.component.html","./src/app/role-to-permissions/role-to-permissions.component.ts","./src/app/role-to-permissions/role-to-permissions.component.html","./src/app/scope-management/scope-management.component.ts","./src/app/scope-management/scope-management.component.html","./src/app/scope-type-management/scope-type-management.component.ts","./src/app/scope-type-management/scope-type-management.component.html","./src/app/spinner/spinner.component.ts","./src/app/spinner/spinner.component.html","./src/app/table-menu/table-menu.component.ts","./src/app/table-menu/table-menu.component.html","./src/app/topbar/topbar.component.ts","./src/app/topbar/topbar.component.html","./src/assets/domainmodel/appsecuritymodel.ts","./src/assets/domainmodel/common-calls.service.ts","./src/assets/domainmodel/context-mgmt-api-client.service.ts","./src/assets/domainmodel/sec-mgmt-api-client.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, EventEmitter, Input, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { SecMgmtApiClientService } from 'src/assets/domainmodel/sec-mgmt-api-client.service';\nimport { Action,SearchApplicationsRequest, Application, CreateApplicationRequest, DeleteApplicationRequest, RequestStatusInformation, CreateActionRequest, DeleteActionRequest } from 'src/assets/domainmodel/appsecuritymodel';\nimport { Observable, pipe } from 'rxjs';\nimport { CommonCallsService } from 'src/assets/domainmodel/common-calls.service'\nimport { BaseForm } from 'src/app/base-comps/commonforms'\nimport { tap } from 'rxjs/operators';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatInput} from '@angular/material/input';\nimport {ResultRow,CellInfo} from 'src/app/results-table/results-table.component'\n\n\n@Component({\n  selector: 'app-action-mgmt',\n  templateUrl: './action-mgmt.component.html',\n  styleUrls: ['./action-mgmt.component.css']\n})\nexport class ActionMgmtComponent extends BaseForm implements OnInit\n{\n  actionName = new FormControl('');\n  actionDescription = new FormControl ('');\n  appIdentifier: string;\n\n  \n  viewableObjects = new Array<Action> ();\n  viewableApps = new Array<Application>();\n  currentKey: string;\n  \n  displayedColumns = ['ActionName','Description','Owner App'];\n  dataSource = new MatTableDataSource<ResultRow>(this.formResults);\n\n  callService: CommonCallsService;\n  managementClient: SecMgmtApiClientService;\n\n  constructor(callService: CommonCallsService,client: SecMgmtApiClientService)\n  {\n    super(); \n    this.callService = callService;\n    this.managementClient = client;\n  }\n\n  rowSelected (key: string)\n  {\n    this.currentKey = key;\n    if (this.currentKey != undefined)\n    {\n      this.viewableObjects.forEach(element=>{\n          if (element.actionName == this.currentKey)\n          {\n              let rr = element;            \n              if (rr != undefined)\n              {\n                if (rr.appIdentifier == null || rr.appIdentifier.length <= 0)\n                    this.appIdentifier = \"GLOBAL\"\n                  else \n                  this.appIdentifier = rr.appIdentifier;\n      \n                  this.actionDescription.setValue(rr.actionDescription);\n                  this.actionName.setValue(rr.actionName);\n                  this.setInfoMessage(\"Updated selected value..\");\n              }\n              return;\n          }\n      });\n    }\n  }\n\n  updateObject ()\n  {\n     let car = new CreateActionRequest ();\n     car.description = this.actionDescription.value;\n     car.appIdentifier = this.appIdentifier;\n     if (car.appIdentifier == \"GLOBAL\")\n     car.appIdentifier = null;\n     car.name = this.actionName.value;\n     this.managementClient.createAction(car).subscribe(value=>{\n        console.log(value.status.statusMessage);\n        if (value.status.statusCode == RequestStatusInformation.standardSuccessCode)\n          this.setInfoMessage(value.status.statusMessage)\n          else\n          this.setErrorMessage(value.status.statusMessage);\n        this.loadViewableObjects();\n     }, error => {\n      console.log(JSON.stringify(error));\n      this.setErrorMessage(\"Failed to create/update action.. check browser console for logs\");\n     });\n  }\n\n  deleteObject ()\n  {\n     let car = new DeleteActionRequest ();\n     car.name = this.actionName.value;\n     this.managementClient.deleteAction(car).subscribe(value=>{\n        console.log(value.status.statusMessage);\n        if (value.status.statusCode == RequestStatusInformation.standardSuccessCode)\n          this.setInfoMessage(value.status.statusMessage)\n          else\n          this.setErrorMessage(value.status.statusMessage);\n        this.loadViewableObjects();\n     },error=>{\n      console.log(JSON.stringify(error));\n      this.setErrorMessage(\"Failed to delete action.. check browser console for logs\");\n     });\n  }\n\n  loadViewableApps ()\n  {\n    this.viewableApps.length = 0;\n    let app = new Application();\n    app.appIdentifier=\"GLOBAL\";\n    app.shortIdentifier=\"GLOBAL\";\n    this.viewableApps.push(app);\n    this.callService.loadViewableApps().then(values=>{\n      values.forEach(element=>{\n        this.viewableApps.push(element);\n      })\n    });\n  }\n\n  loadViewableObjects ()\n  {\n    this.viewableObjects.length=0;\n    this.formResults.length = 0;\n    this.callService.loadViewableActions().then(values=>{\n      values.forEach(element=>{\n        this.viewableObjects.push(element);\n        let ci = new Array<CellInfo> ();\n        ci.push(new CellInfo(element.actionName));\n        ci.push(new CellInfo(element.actionDescription));\n        ci.push(new CellInfo(element.appIdentifier));\n        let rr = new ResultRow(element.actionName,ci);\n        this.formResults.push(rr);\n      })\n      this.dataSource.data=this.formResults;\n    });\n  }\n\n  ngOnInit(): void \n  {\n    this.formTitle=\"Manage Actions\"\n    this.loadViewableApps();\n    this.loadViewableObjects();\n  }\n}","<title>{{formTitle}}</title>\n<app-info-block [errorClass]=\"'errorMessage'\" [infoClass]=\"'infoMessage'\" [messages]=\"messages\" [informationBlockTitle]=\"'Information !'\"></app-info-block>\n<p></p>\n<table class=\"section-title\">\n    <tr>\n        <td class=\"section-heading\">{{formTitle}}</td>\n    </tr>\n</table>\n<p></p>\n<table class=\"form-main-square-back\">\n<tr>\n    <td>\n        <table class=\"form-main-square-front\">\n            <tr> <!-- Row for form elements-->\n                    <td>\n                        <mat-form-field>\n                            <mat-label>Action</mat-label>\n                            <input matInput placeholder=\"Unique Action Name\" [formControl]=\"actionName\">\n                        </mat-form-field>\n                        <br/>\n                        <mat-form-field>\n                            <mat-label>Action Description</mat-label>\n                            <textarea matInput placeholder=\"describe the action..\" [formControl]=\"actionDescription\"></textarea>\n                        </mat-form-field>\n                        <br/>\n                        <br/>\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Associated App</mat-label>\n                            <mat-select [(value)]=\"appIdentifier\">\n                              <mat-option *ngFor=\"let item of viewableApps\" [value]=\"item.appIdentifier\">\n                                {{item.appIdentifier}}\n                              </mat-option>\n                            </mat-select>\n                          </mat-form-field>                        \n                        <br/>\n                        <br/>\n                    </td>\n            </tr>\n            <tr>    <!-- Row for buttons-->\n                <td>\n                        <button (click)=\"updateObject()\" mat-icon-button title=\"Save Record\">\n                            Save<mat-icon style=\"font-size: 24px;\">save</mat-icon>\n                        </button>\n                </td>\n                <td>\n                        <button (click)=\"deleteObject()\" mat-icon-button title=\"Delete Record\">\n                            Delete<mat-icon style=\"font-size: 24px;\">delete</mat-icon>\n                        </button>\n                </td>\n            </tr>\n        </table>\n    </td>\n</tr>\n</table>\n<p></p>\n<!-- Results -->\n<table class=\"section-heading\">\n    <tr>\n        <td class=\"section-title\">Existing Actions</td>\n    </tr>\n</table>\n<app-results-table (currentRowSelected)=\"rowSelected($event)\" [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"></app-results-table>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ActionMgmtComponent } from './action-mgmt/action-mgmt.component';\nimport { ApplicationMgmtComponent } from './application-mgmt/application-mgmt.component';\nimport { ResourceManagementComponent } from './resource-management/resource-management.component';\nimport { ClientManagementComponent } from './client-management/client-management.component';\nimport { ScopeTypeManagementComponent } from './scope-type-management/scope-type-management.component';\nimport { ScopeManagementComponent } from './scope-management/scope-management.component';\nimport { DomainManagementComponent } from './domain-management/domain-management.component';\nimport { DomainTypeManagementComponent } from './domain-type-management/domain-type-management.component';\nimport { ClientGroupManagementComponent } from './client-group-management/client-group-management.component';\nimport { ClientToGroupsComponent } from './client-to-groups/client-to-groups.component';\nimport { RoleToPermissionsComponent } from './role-to-permissions/role-to-permissions.component';\nimport { RoleManagementComponent } from './role-management/role-management.component';\nimport { PermissionManagementComponent } from './permission-management/permission-management.component';\nimport { GroupsToRolesComponent } from './groups-to-roles/groups-to-roles.component';\n\nconst routes: Routes = \n[\n  { path: 'actionManagement', component: ActionMgmtComponent },\n  { path: 'appManagement', component: ApplicationMgmtComponent},\n  { path: 'resourceManagement', component: ResourceManagementComponent},\n  { path: 'clientManagement', component: ClientManagementComponent},\n  { path: 'scopetypeManagement', component: ScopeTypeManagementComponent},\n  { path: 'scopeManagement', component: ScopeManagementComponent},\n  { path: 'domainManagement', component: DomainManagementComponent},\n  { path: 'domaintypeManagement', component: DomainTypeManagementComponent},\n  { path: 'clientGroupManagement', component: ClientGroupManagementComponent},\n  { path: 'clientToGroups', component: ClientToGroupsComponent},\n  { path: 'roleToPermissions', component: RoleToPermissionsComponent},\n  { path: 'clientRoleManagement', component: RoleManagementComponent},\n  { path: 'scopetypeManagement', component: ScopeTypeManagementComponent},\n  { path: 'permissionManagement', component: PermissionManagementComponent},\n  { path: 'groupRoleManagement', component: GroupsToRolesComponent},\n  { path: 'rolePermissionManagement', component: RoleToPermissionsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent \n{\n  title = 'adminapp';\n}\n","<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n<div id=\"topbar\">\n\t<app-topbar></app-topbar>\n</div>\n<p></p>\n<div id=\"routerarea\">\n\t<router-outlet>\n\t</router-outlet>\t\n</div>\n<p></p>\n<div id=\"bottombar\">\n\t<app-bottombar></app-bottombar>\t\n</div>\n\n\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content above * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * End of Placeholder * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TopbarComponent } from './topbar/topbar.component';\nimport { BottombarComponent } from './bottombar/bottombar.component';\nimport { ActionMgmtComponent } from './action-mgmt/action-mgmt.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ApplicationMgmtComponent } from './application-mgmt/application-mgmt.component';\nimport { ResultsTableComponent } from './results-table/results-table.component';\nimport { InfoBlockComponent } from './info-block/info-block.component';\nimport { TableMenuComponent } from './table-menu/table-menu.component';\nimport { SpinnerComponent } from './spinner/spinner.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatTableModule} from '@angular/material/table'\nimport {MatSortModule} from '@angular/material/sort'\nimport {MatPaginatorModule} from '@angular/material/paginator'\nimport {MatFormFieldModule} from '@angular/material/form-field'\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatSelectModule} from '@angular/material/select';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner'\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { ClientManagementComponent } from './client-management/client-management.component';\nimport { ResourceManagementComponent } from './resource-management/resource-management.component';\nimport { ScopeTypeManagementComponent } from './scope-type-management/scope-type-management.component';\nimport { ClientGroupManagementComponent } from './client-group-management/client-group-management.component';\nimport { DomainTypeManagementComponent } from './domain-type-management/domain-type-management.component';\nimport { ScopeManagementComponent } from './scope-management/scope-management.component';\nimport { DomainManagementComponent } from './domain-management/domain-management.component';\nimport { RoleManagementComponent } from './role-management/role-management.component';\nimport { RoleToPermissionsComponent } from './role-to-permissions/role-to-permissions.component';\nimport { ClientToGroupsComponent } from './client-to-groups/client-to-groups.component';\nimport { GroupsToRolesComponent } from './groups-to-roles/groups-to-roles.component';\nimport { PermissionManagementComponent } from './permission-management/permission-management.component';\nimport { LoaderInterceptor } from 'src/app/loader-interceptor';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TopbarComponent,\n    BottombarComponent,\n    ActionMgmtComponent,\n    ApplicationMgmtComponent,\n    ResultsTableComponent,\n    InfoBlockComponent,\n    TableMenuComponent,\n    SpinnerComponent,\n    ClientManagementComponent,\n    ResourceManagementComponent,\n    ScopeTypeManagementComponent,\n    ClientGroupManagementComponent,\n    DomainTypeManagementComponent,\n    ScopeManagementComponent,\n    DomainManagementComponent,\n    RoleManagementComponent,\n    RoleToPermissionsComponent,\n    ClientToGroupsComponent,\n    GroupsToRolesComponent,\n    PermissionManagementComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatListModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    MatProgressSpinnerModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LoaderInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, EventEmitter, Input, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { SecMgmtApiClientService } from 'src/assets/domainmodel/sec-mgmt-api-client.service';\nimport { SearchApplicationsRequest, Application, CreateApplicationRequest, DeleteApplicationRequest, RequestStatusInformation } from 'src/assets/domainmodel/appsecuritymodel';\nimport { Observable, pipe } from 'rxjs';\nimport { CommonCallsService } from 'src/assets/domainmodel/common-calls.service'\nimport { BaseForm } from 'src/app/base-comps/commonforms'\nimport { tap } from 'rxjs/operators';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatInput} from '@angular/material/input';\nimport {ResultRow,CellInfo} from 'src/app/results-table/results-table.component'\n\n\n@Component({\n  selector: 'app-application-mgmt',\n  templateUrl: './application-mgmt.component.html',\n  styleUrls: ['./application-mgmt.component.css']\n})\nexport class ApplicationMgmtComponent extends BaseForm implements OnInit \n{\n  // Fields on the form\n  appIdentifier = new FormControl('');\n  shortIdentifier = new FormControl('');\n  appDescription = new FormControl('');\n\n  callService: CommonCallsService;\n  managementClient: SecMgmtApiClientService;\n  \n  viewableApps: Array<Application> = new Array<Application>();\n  currentKey: string;\n  \n  displayedColumns = ['AppIdentifier','ShortIdentifier','Description'];\n  dataSource = new MatTableDataSource<ResultRow>(this.formResults);\n  \n  constructor(callService: CommonCallsService,client: SecMgmtApiClientService)\n  {\n    super(); \n    this.callService = callService;\n    this.managementClient = client;\n  }\n\n  rowSelected (key: string)\n  {\n    // console.log(\"Current Row Change Called.\" + key);\n    this.currentKey = key;\n    if (this.currentKey != undefined)\n    {\n        this.viewableApps.forEach(element=>{\n          if (element.appIdentifier == this.currentKey)\n          {\n            let rr = element;\n            if (rr != undefined)\n            {\n                this.appIdentifier.setValue(rr.appIdentifier);\n                this.shortIdentifier.setValue(rr.shortIdentifier);\n                this.appDescription.setValue(rr.appDescription);\n                this.setInfoMessage(\"Updated selected value..\");\n            }\n           return;   \n          }\n        });\n    }\n  }\n\n  updateApplication ()\n  {\n    console.debug(\"Update Application called..\");\n     let car = new CreateApplicationRequest ();\n     car.description = this.appDescription.value;\n     car.appIdentifier = this.appIdentifier.value;\n     car.appShortIdentifier = this.shortIdentifier.value;\n     this.managementClient.createApplication(car)\n      this.managementClient.createApplication(car).subscribe(value=>{\n        console.log(value.status.statusMessage);\n        if (value.status.statusCode == RequestStatusInformation.standardSuccessCode)\n          this.setInfoMessage(value.status.statusMessage)\n          else\n          this.setErrorMessage(value.status.statusMessage);\n        this.loadViewableApps();\n     }, error => {\n      console.log(JSON.stringify(error));\n      this.setErrorMessage(\"Failed to create/update application.. check browser console for logs\");\n     });\n  }\n\n  deleteApplication ()\n  {\n    console.debug(\"Delete Application called.\");\n     let car = new DeleteApplicationRequest ();\n     car.appIdentifier = this.appIdentifier.value;\n     this.managementClient.deleteApplication(car).subscribe(value=>{\n        console.log(value.status.statusMessage);\n        if (value.status.statusCode == RequestStatusInformation.standardSuccessCode)\n          this.setInfoMessage(value.status.statusMessage)\n          else\n          this.setErrorMessage(value.status.statusMessage);\n        this.loadViewableApps();\n     },error=>{\n      console.log(JSON.stringify(error));\n      this.setErrorMessage(\"Failed to delete application.. check browser console for logs\");\n     });\n  }\n\n  loadViewableApps ()\n  {\n    this.callService.loadViewableApps().then(values=>{\n      this.viewableApps = values;\n\n      if (this.viewableApps != undefined && this.viewableApps.length > 0)\n      {\n          this.formResults.length = 0;\n          this.viewableApps.forEach(app=>\n          {\n            let ci = new Array<CellInfo> ();\n            ci.push(new CellInfo(app.appIdentifier));\n            ci.push(new CellInfo(app.shortIdentifier));\n            ci.push(new CellInfo(app.appDescription));\n            let rr = new ResultRow(app.appDescription,ci);\n            this.formResults.push(rr);\n          })\n        \n          this.dataSource.data=this.formResults;\n      }\n    });\n  }\n\n\n  ngOnInit(): void \n  {\n      // Lets load the viewable apps..\n      this.formTitle=\"Manage applications\";\n      this.loadViewableApps();\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }    \n}\n","<title>Manage Applications</title>\n<app-info-block [errorClass]=\"'errorMessage'\" [infoClass]=\"'infoMessage'\" [messages]=\"messages\" [informationBlockTitle]=\"'Information !'\"></app-info-block>\n<p></p>\n<table class=\"section-title\">\n    <tr>\n        <td class=\"section-heading\">{{formTitle}}</td>\n    </tr>\n</table>\n<p></p>\n<table class=\"form-main-square-back\">\n<tr>\n    <td>\n        <table class=\"form-main-square-front\">\n            <tr> <!-- Row for form elements-->\n                    <td>\n                        <mat-form-field>\n                            <mat-label>AppIdentifier</mat-label>\n                            <input matInput placeholder=\"unique app identifier\" [formControl]=\"appIdentifier\">\n                        </mat-form-field>\n                    <br/>\n                        <!-- <input type=\"text\" [formControl]=\"appIdentifier\" value=\"appIdentifier\"> -->\n                        <mat-form-field>\n                            <mat-label>Short Identifier</mat-label>\n                            <input matInput placeholder=\"short identifier\" [formControl]=\"shortIdentifier\">\n                        </mat-form-field>\n\n                    <br/>\n                        <mat-form-field>\n                            <mat-label>App Description</mat-label>\n                            <textarea matInput placeholder=\"describe the app..\" [formControl]=\"appDescription\"></textarea>\n                        </mat-form-field>\n                    <br/>\n                </td>\n            </tr>\n            <tr>    <!-- Row for buttons-->\n                <td>\n                        <button (click)=\"updateApplication()\" mat-icon-button title=\"Save Application\">\n                            Save<mat-icon style=\"font-size: 24px;\">save</mat-icon>\n                        </button>\n                        <!-- <button class=\"form-button\" (click)=\"updateApplication()\" [formControl]=\"saveButton\" ngDefaultControl>Save</button> -->\n                </td>\n                <td>\n                        <button (click)=\"deleteApplication()\" mat-icon-button title=\"Delete Record\">\n                            Delete<mat-icon style=\"font-size: 24px;\">delete</mat-icon>\n                        </button>\n                        <!-- <button class=\"form-button\" (click)=\"deleteApplication()\" [formControl]=\"deleteButton\" ngDefaultControl>Delete</button> -->\n                </td>\n            </tr>\n        </table>\n    </td>\n</tr>\n</table>\n<p></p>\n<!-- Results -->\n<table class=\"section-heading\">\n    <tr>\n        <td class=\"section-title\">Existing Applications</td>\n    </tr>\n</table>\n<app-results-table (currentRowSelected)=\"rowSelected($event)\" [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"></app-results-table>","import { CellInfo, ResultRow } from 'src/app/results-table/results-table.component'\r\nimport { Message } from 'src/app/info-block/info-block.component'\r\n\r\nexport class BaseForm\r\n{\r\n    formTitle: string = \"Base Title\";\r\n\r\n    /**\r\n     * These are all pertaining to results component at the bottom of the form.\r\n     */\r\n    formResultsHeading: string = \"Form Results\";\r\n    formResultsTitle: Array<CellInfo> = new Array();\r\n    formResults: Array<ResultRow>=new Array();\r\n    messages: Array<Message> = new Array<Message>();\r\n\r\n    pushErrorMessage (msg: string)\r\n    {\r\n        let m = new Message(msg,true);\r\n        this.messages.push(m);\r\n    }\r\n\r\n    pushInfoMessage (msg: string)\r\n    {\r\n        let m = new Message(msg,false);\r\n        this.messages.push(m);\r\n    }\r\n\r\n\r\n    clearMessages ()\r\n    {\r\n        this.messages.length=0;\r\n    }\r\n\r\n    setErrorMessage (msg: string)\r\n    {\r\n        this.clearMessages();\r\n        this.pushErrorMessage(msg);\r\n    }\r\n\r\n\r\n    setInfoMessage (msg: string)\r\n    {\r\n        this.clearMessages();\r\n        this.pushInfoMessage(msg);\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError, Subscriber } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-bottombar',\n  templateUrl: './bottombar.component.html',\n  styleUrls: ['./bottombar.component.css']\n})\nexport class BottombarComponent implements OnInit {\n\n  constructor() \n  { \n\n  }\n\n  ngOnInit(): void \n  {\n    \n  }\n\n}\n","<small><p style=\"vertical-align: bottom; text-align: left;\">AppSecurity Admin App</p></small>\n\n","import { Component, OnInit } from '@angular/core';\nimport { BaseForm } from '../base-comps/commonforms';\nimport { CommonCallsService } from 'src/assets/domainmodel/common-calls.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ResultRow, CellInfo } from '../results-table/results-table.component';\nimport { Application, ClientGroup, CreateClientGroupRequest, RequestStatusInformation, DeleteClientGroupRequest } from 'src/assets/domainmodel/appsecuritymodel';\nimport { SecMgmtApiClientService } from 'src/assets/domainmodel/sec-mgmt-api-client.service';\nimport { FormControl } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-client-group-management',\n  templateUrl: './client-group-management.component.html',\n  styleUrls: ['./client-group-management.component.css']\n})\nexport class ClientGroupManagementComponent extends BaseForm implements OnInit {\n\n  objectName = new FormControl('');\n  objectDescription = new FormControl ('');\n  appIdentifier: string;\n\n  viewableObjects = new Array<ClientGroup> ();\n  viewableApps = new Array<Application>();\n  currentKey: string;\n  \n  displayedColumns = ['GroupName','Description','Owner App'];\n  dataSource = new MatTableDataSource<ResultRow>(this.formResults);\n\n  callService: CommonCallsService;\n  managementClient: SecMgmtApiClientService;\n\n  constructor(callService: CommonCallsService,client: SecMgmtApiClientService)\n  {\n    super(); \n    this.callService = callService;\n    this.managementClient = client;\n  }\n\n  rowSelected (key: string)\n  {\n    this.currentKey = key;\n    if (this.currentKey != undefined)\n    {\n      this.viewableObjects.forEach(element=>{\n          if (element.name == this.currentKey)\n          {\n              let rr = element;            \n              if (rr != undefined)\n              {\n                if (rr.appIdentifier == null || rr.appIdentifier.length <= 0)\n                    this.appIdentifier = \"GLOBAL\"\n                  else \n                  this.appIdentifier = rr.appIdentifier;\n      \n                  this.objectDescription.setValue(rr.description);\n                  this.objectName.setValue(rr.name);\n                  this.setInfoMessage(\"Updated selected value..\");\n              }\n              return;\n          }\n      });\n    }\n  }\n\n  updateObject ()\n  {\n     let car = new CreateClientGroupRequest ();\n     car.description = this.objectDescription.value;\n     car.appIdentifier = this.appIdentifier;\n     if (car.appIdentifier == \"GLOBAL\")\n     car.appIdentifier = null;\n     car.name = this.objectName.value;\n     this.managementClient.createClientGroup(car).subscribe(value=>{\n        console.log(value.status.statusMessage);\n        if (value.status.statusCode == RequestStatusInformation.standardSuccessCode)\n          this.setInfoMessage(value.status.statusMessage)\n          else\n          this.setErrorMessage(value.status.statusMessage);\n        this.loadViewableObjects();\n     }, error => {\n      console.log(JSON.stringify(error));\n      this.setErrorMessage(\"Failed to create/update record.. check browser console for logs\");\n     });\n  }\n\n  deleteObject ()\n  {\n     let car = new DeleteClientGroupRequest ();\n     car.name = this.objectName.value;\n     this.managementClient.deleteClientGroup(car).subscribe(value=>{\n        console.log(value.status.statusMessage);\n        if (value.status.statusCode == RequestStatusInformation.standardSuccessCode)\n          this.setInfoMessage(value.status.statusMessage)\n          else\n          this.setErrorMessage(value.status.statusMessage);\n        this.loadViewableObjects();\n     },error=>{\n      console.log(JSON.stringify(error));\n      this.setErrorMessage(\"Failed to delete action.. check browser console for logs\");\n     });\n  }\n\n  loadViewableApps ()\n  {\n    this.viewableApps.length = 0;\n    let app = new Application();\n    app.appIdentifier=\"GLOBAL\";\n    app.shortIdentifier=\"GLOBAL\";\n    this.viewableApps.push(app);\n    this.callService.loadViewableApps().then(values=>{\n      values.forEach(element=>{\n        this.viewableApps.push(element);\n      })\n    });\n  }\n\n  loadViewableObjects ()\n  {\n    this.viewableObjects.length=0;\n    this.formResults.length = 0;\n    this.callService.loadViewableClientGroups().then(values=>{\n      values.forEach(element=>{\n        this.viewableObjects.push(element);\n        let ci = new Array<CellInfo> ();\n        ci.push(new CellInfo(element.name));\n        ci.push(new CellInfo(element.description));\n        ci.push(new CellInfo(element.appIdentifier));\n        let rr = new ResultRow(element.name,ci);\n        this.formResults.push(rr);\n      })\n      this.dataSource.data=this.formResults;\n    });\n  }\n\n  ngOnInit(): void \n  {\n    this.formTitle=\"Manage Groups\"\n    this.loadViewableApps();\n    this.loadViewableObjects();\n  }  \n\n}\n","<title>{{formTitle}}</title>\n<app-info-block [errorClass]=\"'errorMessage'\" [infoClass]=\"'infoMessage'\" [messages]=\"messages\" [informationBlockTitle]=\"'Information !'\"></app-info-block>\n<p></p>\n<table class=\"section-title\">\n    <tr>\n        <td class=\"section-heading\">{{formTitle}}</td>\n    </tr>\n</table>\n<p></p>\n<table class=\"form-main-square-back\">\n<tr>\n    <td>\n        <table class=\"form-main-square-front\">\n            <tr> <!-- Row for form elements-->\n                    <td>\n                        <mat-form-field>\n                            <mat-label>Group</mat-label>\n                            <input matInput placeholder=\"Unique Group Name\" [formControl]=\"objectName\">\n                        </mat-form-field>\n                        <br/>\n                        <mat-form-field>\n                            <mat-label>Resource Description</mat-label>\n                            <textarea matInput placeholder=\"describe the Group..\" [formControl]=\"objectDescription\"></textarea>\n                        </mat-form-field>\n                        <br/>\n                        <br/>\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Associated App</mat-label>\n                            <mat-select [(value)]=\"appIdentifier\">\n                              <mat-option *ngFor=\"let item of viewableApps\" [value]=\"item.appIdentifier\">\n                                {{item.appIdentifier}}\n                              </mat-option>\n                            </mat-select>\n                          </mat-form-field>                        \n                        <br/>\n                        <br/>\n                    </td>\n            </tr>\n            <tr>    <!-- Row for buttons-->\n                <td>\n                        <button (click)=\"updateObject()\" mat-icon-button title=\"Save Record\">\n                            Save<mat-icon style=\"font-size: 24px;\">save</mat-icon>\n                        </button>\n                </td>\n                <td>\n                        <button (click)=\"deleteObject()\" mat-icon-button title=\"Delete Record\">\n                            Delete<mat-icon style=\"font-size: 24px;\">delete</mat-icon>\n                        </button>\n                </td>\n            </tr>\n        </table>\n    </td>\n</tr>\n</table>\n<p></p>\n<!-- Results -->\n<table class=\"section-heading\">\n    <tr>\n        <td class=\"section-title\">Existing Records</td>\n    </tr>\n</table>\n<app-results-table (currentRowSelected)=\"rowSelected($event)\" [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"></app-results-table>","import { Component, OnInit } from '@angular/core';\nimport { BaseForm } from '../base-comps/commonforms';\nimport { CommonCallsService } from 'src/assets/domainmodel/common-calls.service';\nimport { SecMgmtApiClientService } from 'src/assets/domainmodel/sec-mgmt-api-client.service';\nimport { Application, AppClient, CreateClientRequest, RequestStatusInformation, DeleteClientRequest } from 'src/assets/domainmodel/appsecuritymodel';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ResultRow, CellInfo } from '../results-table/results-table.component';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-client-management',\n  templateUrl: './client-management.component.html',\n  styleUrls: ['./client-management.component.css']\n})\nexport class ClientManagementComponent extends BaseForm implements OnInit {\n\n  objectName = new FormControl('');\n  objectDescription = new FormControl ('');\n  appIdentifier: string;\n\n  viewableObjects = new Array<AppClient> ();\n  viewableApps = new Array<Application>();\n  currentKey: string;\n  \n  displayedColumns = ['Client Identifier','Description','Owner App'];\n  dataSource = new MatTableDataSource<ResultRow>(this.formResults);\n\n  callService: CommonCallsService;\n  managementClient: SecMgmtApiClientService;\n\n  constructor(callService: CommonCallsService,client: SecMgmtApiClientService)\n  {\n    super(); \n    this.callService = callService;\n    this.managementClient = client;\n  }\n\n  rowSelected (key: string)\n  {\n    this.currentKey = key;\n    if (this.currentKey != undefined)\n    {\n      this.viewableObjects.forEach(element=>{\n          if (element.clientIdentifier == this.currentKey)\n          {\n              let rr = element;            \n              if (rr != undefined)\n              {\n                if (rr.appIdentifier == null || rr.appIdentifier.length <= 0)\n                    this.appIdentifier = \"GLOBAL\"\n                  else \n                  this.appIdentifier = rr.appIdentifier;\n      \n                  this.objectDescription.setValue(rr.description);\n                  this.objectName.setValue(rr.clientIdentifier);\n                  this.setInfoMessage(\"Updated selected value..\");\n              }\n              return;\n          }\n      });\n    }\n  }\n\n  updateObject ()\n  {\n     let car = new CreateClientRequest ();\n     car.description = this.objectDescription.value;\n     car.appIdentifier = this.appIdentifier;\n     if (car.appIdentifier == \"GLOBAL\")\n     car.appIdentifier = null;\n     car.clientIdentifier = this.objectName.value;\n     this.managementClient.createClient(car).subscribe(value=>{\n        console.log(value.status.statusMessage);\n        if (value.status.statusCode == RequestStatusInformation.standardSuccessCode)\n          this.setInfoMessage(value.status.statusMessage)\n          else\n          this.setErrorMessage(value.status.statusMessage);\n        this.loadViewableObjects();\n     }, error => {\n      console.log(JSON.stringify(error));\n      this.setErrorMessage(\"Failed to create/update record.. check browser console for logs\");\n     });\n  }\n\n  deleteObject ()\n  {\n     let car = new DeleteClientRequest ();\n     car.clientIdentifier = this.objectName.value;\n     this.managementClient.deleteClient(car).subscribe(value=>{\n        console.log(value.status.statusMessage);\n        if (value.status.statusCode == RequestStatusInformation.standardSuccessCode)\n          this.setInfoMessage(value.status.statusMessage)\n          else\n          this.setErrorMessage(value.status.statusMessage);\n        this.loadViewableObjects();\n     },error=>{\n      console.log(JSON.stringify(error));\n      this.setErrorMessage(\"Failed to delete record.. check browser console for logs\");\n     });\n  }\n\n  loadViewableApps ()\n  {\n    this.viewableApps.length = 0;\n    let app = new Application();\n    app.appIdentifier=\"GLOBAL\";\n    app.shortIdentifier=\"GLOBAL\";\n    this.viewableApps.push(app);\n    this.callService.loadViewableApps().then(values=>{\n      values.forEach(element=>{\n        this.viewableApps.push(element);\n      })\n    });\n  }\n\n  loadViewableObjects ()\n  {\n    this.viewableObjects.length=0;\n    this.formResults.length = 0;\n    this.callService.loadViewableClients().then(values=>{\n      values.forEach(element=>{\n        this.viewableObjects.push(element);\n        let ci = new Array<CellInfo> ();\n        ci.push(new CellInfo(element.clientIdentifier));\n        ci.push(new CellInfo(element.description));\n        ci.push(new CellInfo(element.appIdentifier));\n        let rr = new ResultRow(element.clientIdentifier,ci);\n        this.formResults.push(rr);\n      })\n      this.dataSource.data=this.formResults;\n    });\n  }\n\n  ngOnInit(): void \n  {\n    this.formTitle=\"Manage Clients\"\n    this.loadViewableApps();\n    this.loadViewableObjects();\n  }\n}\n","<title>{{formTitle}}</title>\n<app-info-block [errorClass]=\"'errorMessage'\" [infoClass]=\"'infoMessage'\" [messages]=\"messages\" [informationBlockTitle]=\"'Information !'\"></app-info-block>\n<p></p>\n<table class=\"section-title\">\n    <tr>\n        <td class=\"section-heading\">{{formTitle}}</td>\n    </tr>\n</table>\n<p></p>\n<table class=\"form-main-square-back\">\n<tr>\n    <td>\n        <table class=\"form-main-square-front\">\n            <tr> <!-- Row for form elements-->\n                    <td>\n                        <mat-form-field>\n                            <mat-label>Client Id</mat-label>\n                            <input matInput placeholder=\"Unique client id\" [formControl]=\"objectName\">\n                        </mat-form-field>\n                        <br/>\n                        <mat-form-field>\n                            <mat-label>Description</mat-label>\n                            <textarea matInput placeholder=\"describe the client\" [formControl]=\"objectDescription\"></textarea>\n                        </mat-form-field>\n                        <br/>\n                        <br/>\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Associated App</mat-label>\n                            <mat-select [(value)]=\"appIdentifier\">\n                              <mat-option *ngFor=\"let item of viewableApps\" [value]=\"item.appIdentifier\">\n                                {{item.appIdentifier}}\n                              </mat-option>\n                            </mat-select>\n                          </mat-form-field>                        \n                        <br/>\n                        <br/>\n                    </td>\n            </tr>\n            <tr>    <!-- Row for buttons-->\n                <td>\n                        <button (click)=\"updateObject()\" mat-icon-button title=\"Save Record\">\n                            Save<mat-icon style=\"font-size: 24px;\">save</mat-icon>\n                        </button>\n                </td>\n                <td>\n                        <button (click)=\"deleteObject()\" mat-icon-button title=\"Delete Record\">\n                            Delete<mat-icon style=\"font-size: 24px;\">delete</mat-icon>\n                        </button>\n                </td>\n            </tr>\n        </table>\n    </td>\n</tr>\n</table>\n<p></p>\n<!-- Results -->\n<table class=\"section-heading\">\n    <tr>\n        <td class=\"section-title\">Existing Records</td>\n    </tr>\n</table>\n<app-results-table (currentRowSelected)=\"rowSelected($event)\" [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"></app-results-table>","import { Component, OnInit } from '@angular/core';\nimport { BaseForm } from '../base-comps/commonforms';\nimport { CommonCallsService } from 'src/assets/domainmodel/common-calls.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ResultRow, CellInfo } from '../results-table/results-table.component';\nimport { Application, Domain, CreateDomainRequest, RequestStatusInformation, DeleteDomainRequest, DomainType, ClientGroup, SearchClientGroupRequest, SearchClientRequest, DeleteGroupMembershipRequest, CreateGroupMembershipRequest, SearchClientResponse, AppClient, SecurityActions } from 'src/assets/domainmodel/appsecuritymodel';\nimport { SecMgmtApiClientService } from 'src/assets/domainmodel/sec-mgmt-api-client.service';\nimport { FormControl } from '@angular/forms';\nimport { timestamp, count } from 'rxjs/operators';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatListOption } from '@angular/material/list';\nimport { Observable } from 'rxjs';\nimport { Timestamp } from 'rxjs/internal/operators/timestamp';\n\n\n@Component({\n  selector: 'app-client-to-groups',\n  templateUrl: './client-to-groups.component.html',\n  styleUrls: ['./client-to-groups.component.css']\n})\nexport class ClientToGroupsComponent extends BaseForm implements OnInit {\n\n  // The text field that folks will put search item in.\n  clientName = new FormControl('');\n  clientIdentifier: string = null;\n\n  assignedGroupSelected: string;\n  assignableGroupSelected: string;\n  \n  // The viewable groups that can be assigned.\n  assignableGroups = new Array<ClientGroup>();\n\n  // The groups that have been assigned already.\n  assignedGroups = new Array<ClientGroup>();\n  \n  callService: CommonCallsService;\n  managementClient: SecMgmtApiClientService;\n\n  searchedClients: AppClient [] = new Array<AppClient>();\n\n\n  constructor(callService: CommonCallsService,client: SecMgmtApiClientService)\n  {\n    super(); \n    this.callService = callService;\n    this.managementClient = client;\n  }\n\n  \n  swapVisible (): boolean\n  {\n     return (!(this.clientIdentifier == null || this.clientIdentifier == undefined));\n  }\n\n\n  searchClients ()\n  {\n    let sc = new SearchClientRequest ();\n    sc.clientIdentifier = this.clientName.value;\n    this.searchedClients.length = 0;\n\n    if (sc.clientIdentifier == null || sc.clientIdentifier.length <= 0)\n    {\n        return null;\n    }\n\n    this.managementClient.searchClients(sc).subscribe(element=>\n    {\n        this.searchedClients.length = 0;\n        if (element != null && element.clients != null)\n        {\n          element.clients.forEach(client=>{\n            this.searchedClients.push(client);\n          })\n        }\n    });\n  }\n\n  searchClient ()\n  {\n    let sc = new SearchClientRequest ();\n    sc.clientIdentifier = this.clientName.value;\n    \n    if (sc.clientIdentifier == null || sc.clientIdentifier.length <= 0)\n    {\n      this.pushErrorMessage(\"Provide a search string..\");\n      return;\n    }\n    this.clientIdentifier = null;\n    this.managementClient.searchClients(sc).subscribe(element=>{\n        if (element != null && element.status.statusCode == RequestStatusInformation.standardSuccessCode)\n        {\n            if (element.clients != null && element.clients.length > 0)\n            {\n                let appC = element.clients[0];\n                this.clientIdentifier = appC.clientIdentifier;\n                this.loadGroups ();\n            }\n            else\n            {\n              this.pushInfoMessage(\"No client found.\");\n            }\n        }\n        else\n        {\n          this.pushErrorMessage(\"Client with id: \" + sc.clientIdentifier + \" not found. - \" + element.status.statusCode);\n        }\n    },error=>{\n        this.pushErrorMessage(JSON.stringify(error));\n    })\n  }\n\n  async assignGroup (selected: SelectionModel<MatListOption>)\n  {\n    if (selected != null)\n    {\n      let a = selected.selected;\n      if (a != null)\n      {\n        a.forEach(async element => {\n          \n          let aGM = new CreateGroupMembershipRequest ();\n          aGM.clientIdentifier = this.clientIdentifier;\n          aGM.clientGroupIdentifier = element.value;\n          await this.managementClient.createGroupMembership(aGM).toPromise().then(async response=>{\n            if (response.status.statusCode == RequestStatusInformation.standardSuccessCode)\n            {\n              this.pushInfoMessage(\"Added membership: \" + element.value);\n              this.loadGroups ();\n            }\n            else\n            {\n              this.pushErrorMessage(\"Error Adding membership: \" + response.status.statusMessage);\n            }\n          })\n        })\n\n        \n      }\n    }\n  }\n\n  async unAssignGroup (selected: SelectionModel<MatListOption>)\n  {\n        console.log(\"UnAssign Group Called.\");\n\n        if (selected != null)\n        {\n          let a = selected.selected;\n          if (a != null)\n          {\n            a.forEach(async element => \n            {\n                // console.log(\"UnAssigning: \" + element.value);\n                let dGM = new DeleteGroupMembershipRequest ();\n                dGM.clientIdentifier = this.clientIdentifier;\n                dGM.clientGroupIdentifier = element.value;\n                await this.managementClient.deleteGroupMembership(dGM).toPromise().then(async response=>{\n                      if (response.status.statusCode == RequestStatusInformation.standardSuccessCode)\n                      {\n                        this.pushInfoMessage(\"Removed membership: \" + element.value);\n                        this.loadGroups ();\n                      }\n                      else\n                      {\n                        this.pushErrorMessage(\"Error removing membership: \" + response.status.statusMessage);\n                      }\n                })\n            })\n          }\n        }\n  }\n\n  async loadGroups ()\n  {\n    let aGroups = new Array<ClientGroup> ();\n    let vGroups = new Array<ClientGroup> ();\n\n    let sgr = new SearchClientGroupRequest();\n    sgr.forClientIdentifier = this.clientIdentifier;\n    await this.managementClient.searchClientGroups(sgr).toPromise().then(async element=>{\n          if (element != null && element.clientGroups != null)\n          {\n              element.clientGroups.forEach(group=>{\n                // console.log(\"Assigned Group: \" + JSON.stringify(group));\n                aGroups.push(group);\n              })\n          }\n    });\n    \n    // Lets call the assignable groups.\n    sgr.forClientIdentifier = null;\n    await this.managementClient.searchClientGroups(sgr).toPromise().then(async element=>{\n      if (element != null && element.clientGroups != null)\n      {\n          element.clientGroups.forEach(group=>{\n            // console.log(\"Assignable Group: \" + JSON.stringify(group));\n            vGroups.push(group);\n          })\n      }\n    });\n\n    let fvGroups = new Array<ClientGroup>();\n    // Okay now that both are available. lets remove common Groups.\n    vGroups.forEach(vGrp=>{\n        let match: boolean = false;\n        aGroups.forEach(aGrp=>{\n          if (aGrp.name == vGrp.name)\n          { \n              match = true;\n          }\n        })\n        if (match == false)\n        {\n            // Push only if there is no match.\n            fvGroups.push(vGrp);\n        }\n    })\n\n    // Okay so now move them to the respective arrays.\n    this.assignedGroups.length = 0;\n    this.assignableGroups.length = 0;\n    fvGroups.forEach(element=>{\n        this.assignableGroups.push(element);\n    })\n\n    aGroups.forEach(element=>{\n        this.assignedGroups.push(element);\n    })\n\n  }\n\n  ngOnInit(): void \n  {\n    this.formTitle=\"Manage Client Group Memberships\"\n  }\n\n}\n","<title>{{formTitle}}</title>\n<app-info-block [errorClass]=\"'errorMessage'\" [infoClass]=\"'infoMessage'\" [messages]=\"messages\" [informationBlockTitle]=\"'Information !'\"></app-info-block>\n<p></p>\n<table class=\"section-title\">\n    <tr>\n        <td class=\"section-heading\">{{formTitle}}</td>\n    </tr>\n</table>\n<p></p>\n<table class=\"form-main-square-back\">\n<tr>\n    <td>\n        <table class=\"form-main-square-front\">\n            <tr> <!-- Row for form elements-->\n                    <td>\n                        <mat-label>Client Name</mat-label>\n                    </td>\n                    <td>\n                        <input type=\"text\" [matAutocomplete]=\"firstAuto\" matInput placeholder=\"Type client unique Id\" [formControl]=\"clientName\" (keypress)=\"searchClients()\">\n                    </td>\n                    <td>\n                        <mat-autocomplete #firstAuto=\"matAutocomplete\">\n                            <mat-option *ngFor=\"let item of searchedClients\" [value]=\"item.clientIdentifier\">\n                              {{item.clientIdentifier}}\n                            </mat-option>\n                          </mat-autocomplete>                        \n                    </td>                          \n                    <td>\n                        <button (click)=\"searchClient()\" mat-icon-button title=\"Search client\">\n                            Search<mat-icon style=\"font-size: 24px;\" matSuffix>search</mat-icon>\n                        </button>\n                    </td>\n            </tr>\n        </table>\n    </td>\n</tr>\n</table>\n<p>\n<div class=\"{{swapVisible()?'visibleItem':'hiddenItem'}}\">\n<table class=\"form-main-square-back\" style=\"width: 100%;\">\n    <tr>\n        <td>\n            <table class=\"form-main-square-front\" style=\"width: 100%;\">\n                <tr style=\"align-content: left; text-align: left;\"><td>Group Membership for <b><i>{{clientIdentifier}}</i></b></td></tr>\n                <tr><td></td><td></td><td></td></tr>\n                <tr> <!-- Titles -->\n                    <td style=\"width: 30%; font-weight: bold;\">Assigned Groups</td>\n                        <td style=\"width: 10%;\"> \n                        </td>\n                    <td style=\"width: 30%; font-weight: bold;\">Available Groups</td>\n                </tr>\n                <tr> \n                    <td style=\"width: 30%;\">\n                            <mat-selection-list #asgS>\n                                <mat-list-option *ngFor=\"let item of assignedGroups\" value=\"{{item.name}}\">\n                                  {{item.name}}\n                                </mat-list-option>\n                            </mat-selection-list>                                \n                    </td>\n                        <td style=\"align-items: center; text-align: center; width: 10%;\"> \n                            <button (click)=\"assignGroup(assgS.selectedOptions)\" mat-icon-button title=\"Assign Group\">\n                                ←Assign\n                            </button>\n                            <br/>\n                            <br/>\n                              <!-- The Buttons -->\n                              <button (click)=\"unAssignGroup(asgS.selectedOptions)\" mat-icon-button title=\"Remove Group Membership\">\n                                Remove→\n                            </button>\n                        </td>\n                    <td style=\"width: 30%;\">\n                        <!-- Available Groups List -->\n                        <mat-selection-list #assgS>\n                            <mat-list-option *ngFor=\"let item of assignableGroups\" value=\"{{item.name}}\">\n                              {{item.name}}\n                            </mat-list-option>\n                        </mat-selection-list>\n                    </td>\n                </tr>\n            </table>\n        </td>\n    </tr>\n</table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BaseForm } from '../base-comps/commonforms';\nimport { CommonCallsService } from 'src/assets/domainmodel/common-calls.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ResultRow, CellInfo } from '../results-table/results-table.component';\nimport { Application, Domain, CreateDomainRequest, RequestStatusInformation, DeleteDomainRequest, DomainType } from 'src/assets/domainmodel/appsecuritymodel';\nimport { SecMgmtApiClientService } from 'src/assets/domainmodel/sec-mgmt-api-client.service';\nimport { FormControl } from '@angular/forms';\nimport { timestamp } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-domain-management',\n  templateUrl: './domain-management.component.html',\n  styleUrls: ['./domain-management.component.css']\n})\nexport class DomainManagementComponent extends BaseForm implements OnInit \n{\n\n  // The type of domain that you are creating..\n  domainType: string;\n\n  // The name of the parent domain if any..\n  parentDomain: string;\n\n  objectName = new FormControl('');\n  objectDescription = new FormControl ('');\n\n  appIdentifier: string;\n\n  viewableObjects     = new Array<Domain> ();\n  viewableApps        = new Array<Application>();\n  viewableParents     = new Array<Domain>();\n  viewableDomainTypes = new Array<DomainType>();\n\n  currentKey: string;\n  \n  displayedColumns = ['Name','Type','Parent','Description','Owner App'];\n  dataSource = new MatTableDataSource<ResultRow>(this.formResults);\n\n  callService: CommonCallsService;\n  managementClient: SecMgmtApiClientService;\n\n  constructor(callService: CommonCallsService,client: SecMgmtApiClientService)\n  {\n    super(); \n    this.callService = callService;\n    this.managementClient = client;\n  }\n\n  rowSelected (key: string)\n  {\n    this.currentKey = key;\n    if (this.currentKey != undefined)\n    {\n      this.viewableObjects.forEach(element=>{\n          if (element.name == this.currentKey)\n          {\n              let rr = element;            \n              if (rr != undefined)\n              {\n                if (rr.appIdentifier == null || rr.appIdentifier.length <= 0)\n                    this.appIdentifier = \"GLOBAL\"\n                  else \n                  this.appIdentifier = rr.appIdentifier;\n\n                  if (rr.parentDomain == null || rr.parentDomain.length <= 0)\n                  this.parentDomain = \"<ROOT>\";\n                  else\n                  this.parentDomain = rr.parentDomain;\n\n\n                  this.domainType = rr.domainType;\n\n                  this.objectDescription.setValue(rr.description);\n                  this.objectName.setValue(rr.name);\n                  this.setInfoMessage(\"Updated selected value..\");\n              }\n              return;\n          }\n      });\n    }\n  }\n\n  updateObject ()\n  {\n     let car = new CreateDomainRequest ();\n     car.name = this.objectName.value;\n     car.description = this.objectDescription.value;\n     car.appIdentifier = this.appIdentifier;\n     car.domainType = this.domainType;\n     car.parentDomain = this.parentDomain;\n     if (car.appIdentifier == \"GLOBAL\")\n     car.appIdentifier = null;\n     if (car.parentDomain == \"<ROOT>\")\n     car.parentDomain = null;\n     this.managementClient.createDomain(car).subscribe(value=>{\n        console.log(value.status.statusMessage);\n        if (value.status.statusCode == RequestStatusInformation.standardSuccessCode)\n          this.setInfoMessage(value.status.statusMessage)\n          else\n          this.setErrorMessage(value.status.statusMessage);\n        this.loadViewableObjects();\n     }, error => {\n      console.log(JSON.stringify(error));\n      this.setErrorMessage(\"Failed to create/update record.. check browser console for logs\");\n     });\n  }\n\n  deleteObject ()\n  {\n     let car = new DeleteDomainRequest ();\n     car.name = this.objectName.value;\n     this.managementClient.deleteDomain(car).subscribe(value=>{\n        console.log(value.status.statusMessage);\n        if (value.status.statusCode == RequestStatusInformation.standardSuccessCode)\n          this.setInfoMessage(value.status.statusMessage)\n          else\n          this.setErrorMessage(value.status.statusMessage);\n        this.loadViewableObjects();\n     },error=>{\n      console.log(JSON.stringify(error));\n      this.setErrorMessage(\"Failed to delete action.. check browser console for logs\");\n     });\n  }\n\n  loadViewableApps ()\n  {\n    this.viewableApps.length = 0;\n    let app = new Application();\n    app.appIdentifier=\"GLOBAL\";\n    app.shortIdentifier=\"GLOBAL\";\n    this.viewableApps.push(app);\n    this.callService.loadViewableApps().then(values=>{\n      values.forEach(element=>{\n        this.viewableApps.push(element);\n      })\n    });\n  }\n\n\n  loadViewableDomainTypes ()\n  {\n    this.viewableDomainTypes.length = 0;\n    this.callService.loadViewableDomainTypes().then(values=>{\n    \n      if (values != null) \n      {\n        values.forEach(element=>{\n          this.viewableDomainTypes.push(element);\n        })\n      }\n\n    });\n  }\n\n  loadViewableParents ()\n  {\n    this.viewableParents.length = 0;\n    let dom = new Domain(\"<ROOT>\",\"<ROOT>\");\n    this.viewableParents.push(dom);\n    this.callService.loadViewableDomains().then(values=>{\n\n      if (values != null)\n      {\n        values.forEach(element=>{\n          this.viewableParents.push(element);\n        })\n      }\n\n    });\n  }\n\n\n  loadViewableObjects ()\n  {\n    this.viewableObjects.length=0;\n    this.formResults.length = 0;\n    this.callService.loadViewableDomains().then(values=>{\n      if (values != null)\n      {\n        values.forEach(element=>{\n          this.viewableObjects.push(element);\n          let ci = new Array<CellInfo> ();\n          ci.push(new CellInfo(element.name));\n          ci.push(new CellInfo(element.domainType));\n          ci.push(new CellInfo(element.parentDomain));\n          ci.push(new CellInfo(element.description));\n          ci.push(new CellInfo(element.appIdentifier));\n          let rr = new ResultRow(element.name,ci);\n          this.formResults.push(rr);\n        })\n      }\n\n      this.dataSource.data=this.formResults;\n      \n    });\n  }\n\n  ngOnInit(): void \n  {\n    this.formTitle=\"Manage Domains\"\n    this.loadViewableApps();\n    this.loadViewableDomainTypes();\n    this.loadViewableParents();\n    this.loadViewableObjects();\n  }  \n\n}\n","<title>{{formTitle}}</title>\n<app-info-block [errorClass]=\"'errorMessage'\" [infoClass]=\"'infoMessage'\" [messages]=\"messages\" [informationBlockTitle]=\"'Information !'\"></app-info-block>\n<p></p>\n<table class=\"section-title\">\n    <tr>\n        <td class=\"section-heading\">{{formTitle}}</td>\n    </tr>\n</table>\n<p></p>\n<table class=\"form-main-square-back\">\n<tr>\n    <td>\n        <table class=\"form-main-square-front\">\n            <tr> <!-- Row for form elements-->\n                    <td>\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>DomainType</mat-label>\n                            <mat-select [(value)]=\"domainType\">\n                              <mat-option *ngFor=\"let item of viewableDomainTypes\" [value]=\"item.name\">\n                                {{item.name}}\n                              </mat-option>\n                            </mat-select>\n                          </mat-form-field>                        \n                        <br/>\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>ParentDomain</mat-label>\n                            <mat-select [(value)]=\"parentDomain\">\n                              <mat-option *ngFor=\"let item of viewableParents\" [value]=\"item.name\">\n                                {{item.name}}\n                              </mat-option>\n                            </mat-select>\n                          </mat-form-field>                        \n                        <br/>\n                        <mat-form-field>\n                            <mat-label>Domain Name</mat-label>\n                            <input matInput placeholder=\"Unique Name\" [formControl]=\"objectName\">\n                        </mat-form-field>\n                        <br/>\n                        <mat-form-field>\n                            <mat-label>Description</mat-label>\n                            <textarea matInput placeholder=\"describe the Domain..\" [formControl]=\"objectDescription\"></textarea>\n                        </mat-form-field>\n                        <br/>\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Associated App</mat-label>\n                            <mat-select [(value)]=\"appIdentifier\">\n                              <mat-option *ngFor=\"let item of viewableApps\" [value]=\"item.appIdentifier\">\n                                {{item.appIdentifier}}\n                              </mat-option>\n                            </mat-select>\n                          </mat-form-field>                        \n                        <br/>\n                    </td>\n            </tr>\n            <tr>    <!-- Row for buttons-->\n                <td>\n                        <button (click)=\"updateObject()\" mat-icon-button title=\"Save Record\">\n                            Save<mat-icon style=\"font-size: 24px;\">save</mat-icon>\n                        </button>\n                </td>\n                <td>\n                        <button (click)=\"deleteObject()\" mat-icon-button title=\"Delete Record\">\n                            Delete<mat-icon style=\"font-size: 24px;\">delete</mat-icon>\n                        </button>\n                </td>\n            </tr>\n        </table>\n    </td>\n</tr>\n</table>\n<p></p>\n<!-- Results -->\n<table class=\"section-heading\">\n    <tr>\n        <td class=\"section-title\">Existing Records</td>\n    </tr>\n</table>\n<app-results-table (currentRowSelected)=\"rowSelected($event)\" [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"></app-results-table>","import { Component, OnInit } from '@angular/core';\nimport { BaseForm } from '../base-comps/commonforms';\nimport { FormControl } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ResultRow, CellInfo } from '../results-table/results-table.component';\nimport { CommonCallsService } from 'src/assets/domainmodel/common-calls.service';\nimport { SecMgmtApiClientService } from 'src/assets/domainmodel/sec-mgmt-api-client.service';\nimport { DomainType, Application, CreateDomainTypeRequest, RequestStatusInformation, DeleteDomainTypeRequest } from 'src/assets/domainmodel/appsecuritymodel';\n\n@Component({\n  selector: 'app-domain-type-management',\n  templateUrl: './domain-type-management.component.html',\n  styleUrls: ['./domain-type-management.component.css']\n})\nexport class DomainTypeManagementComponent extends BaseForm implements OnInit {\n\n  objectName = new FormControl('');\n  objectDescription = new FormControl ('');\n  appIdentifier: string;\n\n  viewableObjects = new Array<DomainType> ();\n  viewableApps = new Array<Application>();\n  currentKey: string;\n  \n  displayedColumns = ['DomainType','Owner App'];\n  dataSource = new MatTableDataSource<ResultRow>(this.formResults);\n\n  callService: CommonCallsService;\n  managementClient: SecMgmtApiClientService;\n\n  constructor(callService: CommonCallsService,client: SecMgmtApiClientService)\n  {\n    super(); \n    this.callService = callService;\n    this.managementClient = client;\n  }\n\n  rowSelected (key: string)\n  {\n    this.currentKey = key;\n    if (this.currentKey != undefined)\n    {\n      this.viewableObjects.forEach(element=>{\n          if (element.name == this.currentKey)\n          {\n              let rr = element;            \n              if (rr != undefined)\n              {\n                if (rr.appIdentifier == null || rr.appIdentifier.length <= 0)\n                    this.appIdentifier = \"GLOBAL\"\n                  else \n                  this.appIdentifier = rr.appIdentifier;\n      \n                  // this.objectDescription.setValue(rr.description);\n                  this.objectName.setValue(rr.name);\n                  this.setInfoMessage(\"Updated selected value..\");\n              }\n              return;\n          }\n      });\n    }\n  }\n\n  updateObject ()\n  {\n     let car = new CreateDomainTypeRequest ();\n     // car.description = this.objectDescription.value;\n     car.appIdentifier = this.appIdentifier;\n     if (car.appIdentifier == \"GLOBAL\")\n     car.appIdentifier = null;\n     car.name = this.objectName.value;\n     this.managementClient.createDomainType(car).subscribe(value=>{\n        console.log(value.status.statusMessage);\n        if (value.status.statusCode == RequestStatusInformation.standardSuccessCode)\n          this.setInfoMessage(value.status.statusMessage)\n          else\n          this.setErrorMessage(value.status.statusMessage);\n        this.loadViewableObjects();\n     }, error => {\n      console.log(JSON.stringify(error));\n      this.setErrorMessage(\"Failed to create/update record.. check browser console for logs\");\n     });\n  }\n\n  deleteObject ()\n  {\n     let car = new DeleteDomainTypeRequest ();\n     car.name = this.objectName.value;\n     this.managementClient.deleteDomainType(car).subscribe(value=>{\n        console.log(value.status.statusMessage);\n        if (value.status.statusCode == RequestStatusInformation.standardSuccessCode)\n          this.setInfoMessage(value.status.statusMessage)\n          else\n          this.setErrorMessage(value.status.statusMessage);\n        this.loadViewableObjects();\n     },error=>{\n      console.log(JSON.stringify(error));\n      this.setErrorMessage(\"Failed to delete record.. check browser console for logs\");\n     });\n  }\n\n  loadViewableApps ()\n  {\n    this.viewableApps.length = 0;\n    let app = new Application();\n    app.appIdentifier=\"GLOBAL\";\n    app.shortIdentifier=\"GLOBAL\";\n    this.viewableApps.push(app);\n    this.callService.loadViewableApps().then(values=>{\n      values.forEach(element=>{\n        this.viewableApps.push(element);\n      })\n    });\n  }\n\n  loadViewableObjects ()\n  {\n    this.viewableObjects.length=0;\n    this.formResults.length = 0;\n    this.callService.loadViewableDomainTypes().then(values=>{\n      if (values != null)\n      {\n        values.forEach(element=>{\n          this.viewableObjects.push(element);\n          let ci = new Array<CellInfo> ();\n          ci.push(new CellInfo(element.name));\n          // ci.push(new CellInfo(element.description));\n          ci.push(new CellInfo(element.appIdentifier));\n          let rr = new ResultRow(element.name,ci);\n          this.formResults.push(rr);\n        })\n      }\n      this.dataSource.data=this.formResults;\n    });\n  }\n\n  ngOnInit(): void \n  {\n    this.formTitle=\"Manage Domain Types\"\n    this.loadViewableApps();\n    this.loadViewableObjects();\n  }\n}\n","<title>{{formTitle}}</title>\n<app-info-block [errorClass]=\"'errorMessage'\" [infoClass]=\"'infoMessage'\" [messages]=\"messages\" [informationBlockTitle]=\"'Information !'\"></app-info-block>\n<p></p>\n<table class=\"section-title\">\n    <tr>\n        <td class=\"section-heading\">{{formTitle}}</td>\n    </tr>\n</table>\n<p></p>\n<table class=\"form-main-square-back\">\n<tr>\n    <td>\n        <table class=\"form-main-square-front\">\n            <tr> <!-- Row for form elements-->\n                    <td>\n                        <mat-form-field>\n                            <mat-label>Domain Type</mat-label>\n                            <input matInput placeholder=\"Unique Identifier\" [formControl]=\"objectName\">\n                        </mat-form-field>\n                        <br/>\n                        <br/>\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Associated App</mat-label>\n                            <mat-select [(value)]=\"appIdentifier\">\n                              <mat-option *ngFor=\"let item of viewableApps\" [value]=\"item.appIdentifier\">\n                                {{item.appIdentifier}}\n                              </mat-option>\n                            </mat-select>\n                          </mat-form-field>                        \n                        <br/>\n                        <br/>\n                    </td>\n            </tr>\n            <tr>    <!-- Row for buttons-->\n                <td>\n                        <button (click)=\"updateObject()\" mat-icon-button title=\"Save Record\">\n                            Save<mat-icon style=\"font-size: 24px;\">save</mat-icon>\n                        </button>\n                </td>\n                <td>\n                        <button (click)=\"deleteObject()\" mat-icon-button title=\"Delete Record\">\n                            Delete<mat-icon style=\"font-size: 24px;\">delete</mat-icon>\n                        </button>\n                </td>\n            </tr>\n        </table>\n    </td>\n</tr>\n</table>\n<p></p>\n<!-- Results -->\n<table class=\"section-heading\">\n    <tr>\n        <td class=\"section-title\">Existing Records</td>\n    </tr>\n</table>\n<app-results-table (currentRowSelected)=\"rowSelected($event)\" [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"></app-results-table>","import { Component, OnInit } from '@angular/core';\nimport { BaseForm } from '../base-comps/commonforms';\nimport { ClientGroup, ClientRole, ClientGroupRole, Scope, Application, Domain, DeleteClientGroupRoleRequest, RequestStatusInformation, CreateClientGroupRoleRequest, SearchClientGroupRoleRequest, SearchClientGroupRoleResponse } from 'src/assets/domainmodel/appsecuritymodel';\nimport { CommonCallsService } from 'src/assets/domainmodel/common-calls.service';\nimport { SecMgmtApiClientService } from 'src/assets/domainmodel/sec-mgmt-api-client.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ResultRow, CellInfo } from '../results-table/results-table.component';\nimport { timestamp } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-groups-to-roles',\n  templateUrl: './groups-to-roles.component.html',\n  styleUrls: ['./groups-to-roles.component.css']\n})\nexport class GroupsToRolesComponent extends BaseForm implements OnInit {\n\n  callService: CommonCallsService;\n  managementClient: SecMgmtApiClientService;\n\n  constructor(callService: CommonCallsService,client: SecMgmtApiClientService)\n  {\n    super(); \n    this.callService = callService;\n    this.managementClient = client;\n  }\n  \n  // The selected group name.\n  groupName = new FormControl('');\n\n  // Selected role name\n  roleName  = new FormControl ('');\n\n  // selected domain name\n  domainName = new FormControl ('');\n\n  // scope name - selected scope name\n  scopeName = new FormControl ('');\n\n  // the selected appidentifier\n  appIdentifier = new FormControl ('');\n\n  // The groups that are viewable by the person.\n  viewableGroups: Array<ClientGroup> = new Array<ClientGroup>();\n\n  // The roles that are available to be assigned.\n  viewableRoles: Array<ClientRole> = new Array<ClientRole>();\n\n  viewableObjects     = new Array<ClientGroupRole> ();\n\n  viewableDomains     = new Array<Domain> ();\n\n  viewableApps        = new Array<Application>();\n\n  viewableScopes      = new Array<Scope> ();\n\n  currentKey: string;\n  \n  displayedColumns = ['GroupName','RoleName','Domain','Scope','Owner App'];\n  dataSource = new MatTableDataSource<ResultRow>(this.formResults);\n\n  rowSelected (key: string)\n  {\n    this.currentKey = key;\n    if (this.currentKey != undefined)\n    {\n      let dcgr = new DeleteClientGroupRoleRequest ();\n      dcgr.key = this.currentKey;\n      this.managementClient.deleteClientGroupRole(dcgr).subscribe(element=>{\n\n        if (element.status.statusCode == RequestStatusInformation.standardSuccessCode)\n        {\n          this.pushInfoMessage(element.status.statusMessage);\n        }\n        else\n        {\n          this.pushErrorMessage(element.status.statusMessage);\n        }\n        this.reloadObjects ();\n      },error=>{\n        this.pushErrorMessage(JSON.stringify(error));\n      })\n    }\n  }\n\n  updateObject ()\n  {\n     let car = new CreateClientGroupRoleRequest ();\n     car.groupName = this.groupName.value;\n     car.domainName = this.domainName.value;\n     car.scopeName = this.scopeName.value;\n     car.roleName = this.roleName.value;\n     car.appIdentifier = this.appIdentifier.value;\n     if (car.appIdentifier == \"GLOBAL\")\n     car.appIdentifier = null;\n     this.managementClient.createClientGroupRole(car).subscribe(value=>{\n        console.log(value.status.statusMessage);\n        if (value.status.statusCode == RequestStatusInformation.standardSuccessCode)\n          this.setInfoMessage(value.status.statusMessage)\n          else\n          this.setErrorMessage(value.status.statusMessage);\n        this.reloadObjects();\n     }, error => {\n      console.log(JSON.stringify(error));\n      this.setErrorMessage(\"Failed to create/update record.. check browser console for logs\");\n     });\n  }\n\n  reloadObjects ()\n  {\n    this.loadViewableObjects ();\n  }\n\n  loadViewableScopes ()\n  {\n    this.viewableScopes.length=0;\n    this.callService.loadViewableScopes().then(values=>{\n      if (values != null)\n      {\n        values.forEach(element=>{\n          this.viewableScopes.push(element);\n        })\n      }\n    });\n  }\n\n  loadViewableGroups ()\n  {\n    this.viewableGroups.length=0;\n    this.callService.loadViewableClientGroups().then(values=>{\n      values.forEach(element=>{\n        this.viewableGroups.push(element);\n      })\n    });\n  }\n\n  loadViewableDomains ()\n  {\n    this.viewableDomains.length=0;\n    this.callService.loadViewableDomains().then(values=>{\n      if (values != null)\n      {\n        values.forEach(element=>{\n          this.viewableDomains.push(element);\n        })\n      }\n    });\n  }\n\n  loadViewableRoles ()\n  {\n    this.viewableRoles.length = 0;\n    this.callService.loadViewableClientRoles().then(values=>{\n      values.forEach(element=>{\n        this.viewableRoles.push(element);\n      })\n    });\n  }\n\n  \n  async receiveViewableOjects (element: SearchClientGroupRoleResponse)\n  {\n    this.viewableObjects.length = 0;\n    this.formResults.length = 0;\n    if (element != null && element.clientGroupRoles != null)\n    {\n       element.clientGroupRoles.forEach(cgr=>{\n        this.viewableObjects.push(cgr);\n        let ci = new Array<CellInfo> ();\n        ci.push(new CellInfo(cgr.groupName));\n        ci.push(new CellInfo(cgr.roleName));\n        ci.push(new CellInfo(cgr.domainName));\n        ci.push(new CellInfo(cgr.scopeName));\n        ci.push(new CellInfo(cgr.appIdentifier));\n        let rr = new ResultRow(cgr.key,ci);\n        this.formResults.push(rr);\n       })\n    this.dataSource.data=this.formResults;\n    }\n  }\n  \n  loadViewableObjects ()\n  {\n    this.viewableObjects.length = 0;\n    this.formResults.length = 0;\n    if (this.groupName.value == null || this.groupName.value == undefined)\n    return;\n    let scgrr = new SearchClientGroupRoleRequest ();\n    scgrr.groupName = this.groupName.value;\n    scgrr.roleName = this.roleName.value;\n    scgrr.domainName = this.domainName.value;\n    scgrr.scopeName = this.scopeName.value;\n    scgrr.appIdentifier = this.appIdentifier.value;\n    if (scgrr.appIdentifier == \"GLOBAL\")\n    scgrr.appIdentifier = \"\";\n    this.managementClient.searchClientGroupRoles(scgrr).subscribe(async element=>{\n      await this.receiveViewableOjects(element);\n    })\n  }\n\n  loadViewableApps ()\n  {\n    this.viewableApps.length = 0;\n    let app = new Application();\n    app.appIdentifier=\"GLOBAL\";\n    app.shortIdentifier=\"GLOBAL\";\n    this.viewableApps.push(app);\n    this.callService.loadViewableApps().then(values=>{\n      values.forEach(element=>{\n        this.viewableApps.push(element);\n      })\n    });\n  }\n \n\n  subscribeToChanges ()\n  {\n    this.groupName.valueChanges.subscribe(event=>{\n      this.reloadObjects();\n    })\n    this.roleName.valueChanges.subscribe(event=>{\n      this.reloadObjects ();\n    })\n    this.scopeName.valueChanges.subscribe(event=>{\n      this.reloadObjects();\n    })\n    this.domainName.valueChanges.subscribe(event=>{\n      this.reloadObjects();\n    })\n    this.appIdentifier.valueChanges.subscribe(event=>{\n      this.reloadObjects();\n    })\n  }\n\n  clearFormControls ()\n  {\n    this.groupName.setValue(\"\");\n    this.roleName.setValue(\"\");\n    this.domainName.setValue(\"\");\n    this.scopeName.setValue(\"\");\n    this.appIdentifier.setValue(\"GLOBAL\");\n  }\n\n  ngOnInit(): void \n  {\n    this.formTitle = \"Manage Client Groups to Role Mappings.\"\n    this.loadViewableDomains ();\n    this.loadViewableGroups ();\n    this.loadViewableRoles ();\n    this.loadViewableScopes ();\n    this.loadViewableObjects ();\n    this.loadViewableApps ();\n    this.subscribeToChanges();\n  }\n \n}","<title>{{formTitle}}</title>\n<app-info-block [errorClass]=\"'errorMessage'\" [infoClass]=\"'infoMessage'\" [messages]=\"messages\" [informationBlockTitle]=\"'Information !'\"></app-info-block>\n<p></p>\n<table class=\"section-title\">\n    <tr>\n        <td class=\"section-heading\">{{formTitle}}</td>\n    </tr>\n</table>\n<p></p>\n<table class=\"form-main-square-back\">\n<tr>\n    <td>\n        <table class=\"form-main-square-front\">\n            <tr> <!-- Row for form elements-->\n                    <td>\n                          <mat-form-field appearance=\"fill\">\n                            <mat-label>Client Group</mat-label>\n                            <mat-select [formControl]=\"groupName\">\n                              <mat-option *ngFor=\"let item of viewableGroups\" [value]=\"item.name\">\n                                {{item.name}}\n                              </mat-option>\n                            </mat-select>\n                          </mat-form-field>                        \n                    </td>\n                    <td>\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Client Roles</mat-label>\n                            <mat-select [formControl]=\"roleName\">\n                              <mat-option *ngFor=\"let item of viewableRoles\" [value]=\"item.name\">\n                                {{item.name}}\n                              </mat-option>\n                            </mat-select>\n                          </mat-form-field>                        \n                    </td>    \n                    <td>\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Scope</mat-label>\n                            <mat-select [formControl]=\"scopeName\">\n                              <mat-option *ngFor=\"let item of viewableScopes\" [value]=\"item.scopeName\">\n                                {{item.scopeName}}\n                              </mat-option>\n                            </mat-select>\n                          </mat-form-field>                        \n                    </td>\n                    <td>\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Domain</mat-label>\n                            <mat-select [formControl]=\"domainName\">\n                              <mat-option *ngFor=\"let item of viewableDomains\" [value]=\"item.name\">\n                                {{item.name}}\n                              </mat-option>\n                            </mat-select>\n                          </mat-form-field>                        \n                    </td>\n                    <td>\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Associated App</mat-label>\n                            <mat-select [formControl]=\"appIdentifier\">\n                              <mat-option *ngFor=\"let item of viewableApps\" [value]=\"item.appIdentifier\">\n                                {{item.appIdentifier}}\n                              </mat-option>\n                            </mat-select>\n                          </mat-form-field>                        \n                        <br/>\n                    </td>\n            </tr>\n            <tr>    <!-- Row for buttons-->\n                <td>\n                        <button (click)=\"updateObject()\" mat-icon-button title=\"Save Record\">\n                            Save<mat-icon style=\"font-size: 24px;\">save</mat-icon>\n                        </button>\n                </td>\n                <td>\n                  <button (click)=\"clearFormControls()\" mat-icon-button title=\"Clear Form Values\">\n                      Clear Form<mat-icon style=\"font-size: 16px;\">clear</mat-icon>\n                  </button>\n                </td>\n            </tr>\n        </table>\n    </td>\n</tr>\n</table>\n<p></p>\n<!-- Results -->\n<table class=\"section-heading\">\n    <tr>\n        <td class=\"section-title\">Existing Records</td>\n    </tr>\n</table>\n<app-results-table (currentRowSelected)=\"rowSelected($event)\" [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"></app-results-table>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-info-block',\n  templateUrl: './info-block.component.html',\n  styleUrls: ['./info-block.component.css']\n})\nexport class InfoBlockComponent implements OnInit \n{\n  @Input () informationBlockTitle: string;\n  @Input () errorClass: string; // The style sheet class for displaying Error.\n  @Input () infoClass: string;  // The style sheet class for display info.\n  @Input () messages: Array<Message>;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  closeBox ()\n  {\n    if (this.messages != undefined)\n     this.messages.length=0;\n  }\n\n  boxVisible (): boolean\n  {\n    if (this.messages == undefined || this.messages.length<=0)\n      return false;\n      else\n      return true;\n  }\n\n}\n\nexport class Message\n{\n  msg: string;\n  error: boolean; // True if it is an error,  false if it is just a message.\n\n  constructor(msg: string,error: boolean=false)\n  {\n    this.msg = msg;\n    this.error = error;\n  }\n}","<div class=\"{{boxVisible()?'visibleItem' : 'hiddenItem' }}\">\n<table class=\"info-block-table-main-square-back\">\n<tr>\n    <td>\n        <table class=\"info-block-table-main-square-front\">\n            <tr class=\"info-block-title-row\">\n                <td style=\"align-content: left;\">{{informationBlockTitle}}</td><td style=\"align-content: right;\">\n                    <button class=\"info-block-button\" (click)=\"closeBox()\" title=\"Click to clear\">X</button></td>\n            </tr>\n            <tr>\n                <ul>\n                    <li *ngFor=\"let msg of messages\">\n                        <span class=\"{{msg.error ? errorClass : infoClass}}\">{{msg.msg}}</span>\n                    </li>\n                </ul>\n            </tr>\n        </table>\n    </td>\n</tr>\n</table>\n</div>","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { LoaderServiceService } from 'src/app/loader-service.service';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport class LoaderInterceptor implements HttpInterceptor \n{\n    private count = 0;\n    \n    constructor(private loaderService: LoaderServiceService) \n    { \n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> \n    {\n        console.log(\"Intercepted..\");\n        if (this.count === 0) {\n            this.loaderService.setHttpProgressStatus(true);\n          }\n          this.count++;\n          return next.handle(req).pipe(\n            finalize(() => {\n              this.count--;\n              if (this.count === 0) {\n                this.loaderService.setHttpProgressStatus(false);\n              }\n            }));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderServiceService {\n\n  private httpLoading = new ReplaySubject<boolean>(1);\n  constructor() { }\n\n  httpProgress(): Observable<boolean> {\n    return this.httpLoading.asObservable();\n  }\n\n  setHttpProgressStatus(inprogess: boolean) {\n    this.httpLoading.next(inprogess);\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { BaseForm } from '../base-comps/commonforms';\nimport { CommonCallsService } from 'src/assets/domainmodel/common-calls.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ResultRow, CellInfo } from '../results-table/results-table.component';\nimport { Application, Permission, CreatePermissionRequest, RequestStatusInformation, DeletePermissionRequest, Action, Resource } from 'src/assets/domainmodel/appsecuritymodel';\nimport { SecMgmtApiClientService } from 'src/assets/domainmodel/sec-mgmt-api-client.service';\nimport { FormControl } from '@angular/forms';\nimport { timestamp } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-permission-management',\n  templateUrl: './permission-management.component.html',\n  styleUrls: ['./permission-management.component.css']\n})\nexport class PermissionManagementComponent extends BaseForm implements OnInit \n{\n  objectName = new FormControl('');\n  objectDescription = new FormControl ('');\n  actionName: string;\n  resourceName: string;\n  appIdentifier: string;\n\n  viewableObjects   = new Array<Permission> ();\n  viewableApps      = new Array<Application>();\n  viewableActions   = new Array<Action>();\n  viewableResources = new Array<Resource>();\n\n  currentKey: string;\n  \n  displayedColumns = ['Name','Action','Resource','Description','Owner App'];\n  dataSource = new MatTableDataSource<ResultRow>(this.formResults);\n\n  callService: CommonCallsService;\n  managementClient: SecMgmtApiClientService;\n\n  constructor(callService: CommonCallsService,client: SecMgmtApiClientService)\n  {\n    super(); \n    this.callService = callService;\n    this.managementClient = client;\n  }\n\n  rowSelected (key: string)\n  {\n    this.currentKey = key;\n    if (this.currentKey != undefined)\n    {\n      this.viewableObjects.forEach(element=>{\n          if (element.name == this.currentKey)\n          {\n              let rr = element;            \n              if (rr != undefined)\n              {\n                if (rr.appIdentifier == null || rr.appIdentifier.length <= 0)\n                    this.appIdentifier = \"GLOBAL\"\n                  else \n                  this.appIdentifier = rr.appIdentifier;\n                  this.actionName = rr.action;\n                  this.resourceName = rr.resource;\n                  this.objectDescription.setValue(rr.description);\n                  this.objectName.setValue(rr.name);\n                  this.setInfoMessage(\"Updated selected value..\");\n              }\n              return;\n          }\n      });\n    }\n  }\n\n  updateObject ()\n  {\n     let car = new CreatePermissionRequest ();\n     car.name = this.objectName.value;\n     car.description = this.objectDescription.value;\n     car.appIdentifier = this.appIdentifier;\n     car.actionName = this.actionName;\n     car.resourceName = this.resourceName;\n     if (car.appIdentifier == \"GLOBAL\")\n     car.appIdentifier = null;\n     this.managementClient.createPermission(car).subscribe(value=>{\n        console.log(value.status.statusMessage);\n        if (value.status.statusCode == RequestStatusInformation.standardSuccessCode)\n          this.setInfoMessage(value.status.statusMessage)\n          else\n          this.setErrorMessage(value.status.statusMessage);\n        this.loadViewableObjects();\n     }, error => {\n      console.log(JSON.stringify(error));\n      this.setErrorMessage(\"Failed to create/update record.. check browser console for logs\");\n     });\n  }\n\n  deleteObject ()\n  {\n     let car = new DeletePermissionRequest ();\n     car.name = this.objectName.value;\n     this.managementClient.deletePermission(car).subscribe(value=>{\n        console.log(value.status.statusMessage);\n        if (value.status.statusCode == RequestStatusInformation.standardSuccessCode)\n          this.setInfoMessage(value.status.statusMessage)\n          else\n          this.setErrorMessage(value.status.statusMessage);\n        this.loadViewableObjects();\n     },error=>{\n      console.log(JSON.stringify(error));\n      this.setErrorMessage(\"Failed to delete action.. check browser console for logs\");\n     });\n  }\n\n  loadViewableApps ()\n  {\n    this.viewableApps.length = 0;\n    let app = new Application();\n    app.appIdentifier=\"GLOBAL\";\n    app.shortIdentifier=\"GLOBAL\";\n    this.viewableApps.push(app);\n    this.callService.loadViewableApps().then(values=>{\n      values.forEach(element=>{\n        this.viewableApps.push(element);\n      })\n    });\n  }\n\n\n  loadViewableResources ()\n  {\n    this.viewableResources.length = 0;\n    this.callService.loadViewableResources().then(values=>{\n      values.forEach(element=>{\n        this.viewableResources.push(element);\n      })\n    });\n  }\n\n  loadViewableActions ()\n  {\n    this.viewableActions.length = 0;\n    this.callService.loadViewableActions().then(values=>{\n      values.forEach(element=>{\n        this.viewableActions.push(element);\n      })\n    });\n  }\n\n\n  loadViewableObjects ()\n  {\n    this.viewableObjects.length=0;\n    this.formResults.length = 0;\n    this.callService.loadViewablePermissions().then(values=>{\n      values.forEach(element=>{\n        this.viewableObjects.push(element);\n        let ci = new Array<CellInfo> ();\n        ci.push(new CellInfo(element.name));\n        ci.push(new CellInfo(element.action));\n        ci.push(new CellInfo(element.resource));\n        ci.push(new CellInfo(element.description));\n        ci.push(new CellInfo(element.appIdentifier));\n        let rr = new ResultRow(element.name,ci);\n        this.formResults.push(rr);\n      })\n      this.dataSource.data=this.formResults;\n    });\n  }\n\n  ngOnInit(): void \n  {\n    console.log(\"NgInit Permissions\");\n    this.formTitle=\"Manage Permissions\"\n    this.loadViewableApps();\n    this.loadViewableActions();\n    this.loadViewableResources();\n    this.loadViewableObjects();\n  }  \n\n}\n","<title>{{formTitle}}</title>\n<app-info-block [errorClass]=\"'errorMessage'\" [infoClass]=\"'infoMessage'\" [messages]=\"messages\" [informationBlockTitle]=\"'Information !'\"></app-info-block>\n<p></p>\n<table class=\"section-title\">\n    <tr>\n        <td class=\"section-heading\">{{formTitle}}</td>\n    </tr>\n</table>\n<p></p>\n<table class=\"form-main-square-back\">\n<tr>\n    <td>\n        <table class=\"form-main-square-front\">\n            <tr> <!-- Row for form elements-->\n                    <td>\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Associated Action</mat-label>\n                            <mat-select [(value)]=\"actionName\">\n                              <mat-option *ngFor=\"let item of viewableActions\" [value]=\"item.actionName\">\n                                {{item.actionName}}\n                              </mat-option>\n                            </mat-select>\n                          </mat-form-field>                        \n                        <br/>\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Associated Resource</mat-label>\n                            <mat-select [(value)]=\"resourceName\">\n                              <mat-option *ngFor=\"let item of viewableResources\" [value]=\"item.name\">\n                                {{item.name}}\n                              </mat-option>\n                            </mat-select>\n                          </mat-form-field>                        \n                        <br/>\n                        <mat-form-field>\n                            <mat-label>Permission Name</mat-label>\n                            <input matInput placeholder=\"Unique Name\" [formControl]=\"objectName\">\n                        </mat-form-field>\n                        <br/>\n                        <mat-form-field>\n                            <mat-label>Description</mat-label>\n                            <textarea matInput placeholder=\"describe the permission..\" [formControl]=\"objectDescription\"></textarea>\n                        </mat-form-field>\n                        <br/>\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Associated App</mat-label>\n                            <mat-select [(value)]=\"appIdentifier\">\n                              <mat-option *ngFor=\"let item of viewableApps\" [value]=\"item.appIdentifier\">\n                                {{item.appIdentifier}}\n                              </mat-option>\n                            </mat-select>\n                          </mat-form-field>                        \n                        <br/>\n                    </td>\n            </tr>\n            <tr>    <!-- Row for buttons-->\n                <td>\n                        <button (click)=\"updateObject()\" mat-icon-button title=\"Save Record\">\n                            Save<mat-icon style=\"font-size: 24px;\">save</mat-icon>\n                        </button>\n                </td>\n                <td>\n                        <button (click)=\"deleteObject()\" mat-icon-button title=\"Delete Record\">\n                            Delete<mat-icon style=\"font-size: 24px;\">delete</mat-icon>\n                        </button>\n                </td>\n            </tr>\n        </table>\n    </td>\n</tr>\n</table>\n<p></p>\n<!-- Results -->\n<table class=\"section-heading\">\n    <tr>\n        <td class=\"section-title\">Existing Records</td>\n    </tr>\n</table>\n<app-results-table (currentRowSelected)=\"rowSelected($event)\" [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"></app-results-table>","import { Component, OnInit } from '@angular/core';\nimport { BaseForm } from '../base-comps/commonforms';\nimport { CommonCallsService } from 'src/assets/domainmodel/common-calls.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ResultRow, CellInfo } from '../results-table/results-table.component';\nimport { Application, Resource, CreateResourceRequest, RequestStatusInformation, DeleteResourceRequest } from 'src/assets/domainmodel/appsecuritymodel';\nimport { SecMgmtApiClientService } from 'src/assets/domainmodel/sec-mgmt-api-client.service';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-resource-management',\n  templateUrl: './resource-management.component.html',\n  styleUrls: ['./resource-management.component.css']\n})\nexport class ResourceManagementComponent extends BaseForm implements OnInit {\n\n  objectName = new FormControl('');\n  objectDescription = new FormControl ('');\n  appIdentifier: string;\n\n  viewableObjects = new Array<Resource> ();\n  viewableApps = new Array<Application>();\n  currentKey: string;\n  \n  displayedColumns = ['ResourceName','Description','Owner App'];\n  dataSource = new MatTableDataSource<ResultRow>(this.formResults);\n\n  callService: CommonCallsService;\n  managementClient: SecMgmtApiClientService;\n\n  constructor(callService: CommonCallsService,client: SecMgmtApiClientService)\n  {\n    super(); \n    this.callService = callService;\n    this.managementClient = client;\n  }\n\n  rowSelected (key: string)\n  {\n    this.currentKey = key;\n    if (this.currentKey != undefined)\n    {\n      this.viewableObjects.forEach(element=>{\n          if (element.name == this.currentKey)\n          {\n              let rr = element;            \n              if (rr != undefined)\n              {\n                if (rr.appIdentifier == null || rr.appIdentifier.length <= 0)\n                    this.appIdentifier = \"GLOBAL\"\n                  else \n                  this.appIdentifier = rr.appIdentifier;\n      \n                  this.objectDescription.setValue(rr.description);\n                  this.objectName.setValue(rr.name);\n                  this.setInfoMessage(\"Updated selected value..\");\n              }\n              return;\n          }\n      });\n    }\n  }\n\n  updateObject ()\n  {\n     let car = new CreateResourceRequest ();\n     car.description = this.objectDescription.value;\n     car.appIdentifier = this.appIdentifier;\n     if (car.appIdentifier == \"GLOBAL\")\n     car.appIdentifier = null;\n     car.name = this.objectName.value;\n     this.managementClient.createResource(car).subscribe(value=>{\n        console.log(value.status.statusMessage);\n        if (value.status.statusCode == RequestStatusInformation.standardSuccessCode)\n          this.setInfoMessage(value.status.statusMessage)\n          else\n          this.setErrorMessage(value.status.statusMessage);\n        this.loadViewableObjects();\n     }, error => {\n      console.log(JSON.stringify(error));\n      this.setErrorMessage(\"Failed to create/update record.. check browser console for logs\");\n     });\n  }\n\n  deleteObject ()\n  {\n     let car = new DeleteResourceRequest ();\n     car.name = this.objectName.value;\n     this.managementClient.deleteResource(car).subscribe(value=>{\n        console.log(value.status.statusMessage);\n        if (value.status.statusCode == RequestStatusInformation.standardSuccessCode)\n          this.setInfoMessage(value.status.statusMessage)\n          else\n          this.setErrorMessage(value.status.statusMessage);\n        this.loadViewableObjects();\n     },error=>{\n      console.log(JSON.stringify(error));\n      this.setErrorMessage(\"Failed to delete action.. check browser console for logs\");\n     });\n  }\n\n  loadViewableApps ()\n  {\n    this.viewableApps.length = 0;\n    let app = new Application();\n    app.appIdentifier=\"GLOBAL\";\n    app.shortIdentifier=\"GLOBAL\";\n    this.viewableApps.push(app);\n    this.callService.loadViewableApps().then(values=>{\n      values.forEach(element=>{\n        this.viewableApps.push(element);\n      })\n    });\n  }\n\n  loadViewableObjects ()\n  {\n    this.viewableObjects.length=0;\n    this.formResults.length = 0;\n    this.callService.loadViewableResources().then(values=>{\n      values.forEach(element=>{\n        this.viewableObjects.push(element);\n        let ci = new Array<CellInfo> ();\n        ci.push(new CellInfo(element.name));\n        ci.push(new CellInfo(element.description));\n        ci.push(new CellInfo(element.appIdentifier));\n        let rr = new ResultRow(element.name,ci);\n        this.formResults.push(rr);\n      })\n      this.dataSource.data=this.formResults;\n    });\n  }\n\n  ngOnInit(): void \n  {\n    this.formTitle=\"Manage Resources\"\n    this.loadViewableApps();\n    this.loadViewableObjects();\n  }\n}\n","<title>{{formTitle}}</title>\n<app-info-block [errorClass]=\"'errorMessage'\" [infoClass]=\"'infoMessage'\" [messages]=\"messages\" [informationBlockTitle]=\"'Information !'\"></app-info-block>\n<p></p>\n<table class=\"section-title\">\n    <tr>\n        <td class=\"section-heading\">{{formTitle}}</td>\n    </tr>\n</table>\n<p></p>\n<table class=\"form-main-square-back\">\n<tr>\n    <td>\n        <table class=\"form-main-square-front\">\n            <tr> <!-- Row for form elements-->\n                    <td>\n                        <mat-form-field>\n                            <mat-label>Resource</mat-label>\n                            <input matInput placeholder=\"Unique Resource Name\" [formControl]=\"objectName\">\n                        </mat-form-field>\n                        <br/>\n                        <mat-form-field>\n                            <mat-label>Resource Description</mat-label>\n                            <textarea matInput placeholder=\"describe the resource..\" [formControl]=\"objectDescription\"></textarea>\n                        </mat-form-field>\n                        <br/>\n                        <br/>\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Associated App</mat-label>\n                            <mat-select [(value)]=\"appIdentifier\">\n                              <mat-option *ngFor=\"let item of viewableApps\" [value]=\"item.appIdentifier\">\n                                {{item.appIdentifier}}\n                              </mat-option>\n                            </mat-select>\n                          </mat-form-field>                        \n                        <br/>\n                        <br/>\n                    </td>\n            </tr>\n            <tr>    <!-- Row for buttons-->\n                <td>\n                        <button (click)=\"updateObject()\" mat-icon-button title=\"Save Record\">\n                            Save<mat-icon style=\"font-size: 24px;\">save</mat-icon>\n                        </button>\n                </td>\n                <td>\n                        <button (click)=\"deleteObject()\" mat-icon-button title=\"Delete Record\">\n                            Delete<mat-icon style=\"font-size: 24px;\">delete</mat-icon>\n                        </button>\n                </td>\n            </tr>\n        </table>\n    </td>\n</tr>\n</table>\n<p></p>\n<!-- Results -->\n<table class=\"section-heading\">\n    <tr>\n        <td class=\"section-title\">Existing Records</td>\n    </tr>\n</table>\n<app-results-table (currentRowSelected)=\"rowSelected($event)\" [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"></app-results-table>","import { Component, OnInit, Input, Output, EventEmitter,ViewChild } from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport  {MatInput} from '@angular/material/input';\n\n@Component({\n  selector: 'app-results-table',\n  templateUrl: './results-table.component.html',\n  styleUrls: ['./results-table.component.css']\n})\nexport class ResultsTableComponent implements OnInit \n{\n  @Input ()\n  displayedColumns: string [];\n\n  @Input ()\n  dataSource: MatTableDataSource<ResultRow>;\n\n  @Input ()\n  iconName: string = \"arrow_circle_up\";\n\n  @Input ()\n  iconTitle: string = \"Select this Record\";\n\n  @Output() \n  currentRowSelected = new EventEmitter<string>();\n\n  allColumns: string [] = new Array();\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n\n    \n  constructor() { }\n\n  deletePressedOnKey (key: string)\n  {\n    console.log(\"Delete pressed On Row: \" + key);\n    this.currentRowSelected.emit(key);\n    console.log(\"Function Emittied: \" + key);\n  }\n\n  ngOnInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.allColumns.length=0;\n    this.allColumns.push(\"selectColumn\");\n    this.displayedColumns.forEach(element => {\n      this.allColumns.push(element);\n    });\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }  \n}\n\nexport class CellInfo\n{\n    data: string;   // The data to show in the cell..\n    link: string;   // any link if to show..\n    title: string;  // any title to show on the data\n\n    constructor(data: string,link: string=null,title:string = null)\n    {\n      this.data =data;\n      this.link =link;\n      this.title=title;\n    }\n}\n\nexport class ResultRow\n{\n  rowdata: Array<CellInfo>;\n  key: string;  // The key for the Row..\n \n  constructor(key: string,rowdata: Array<CellInfo>)\n  {\n    this.key = key;\n    this.rowdata=rowdata;\n  }\n}","<mat-form-field>\n<mat-label>Filter</mat-label>\n<input matInput (keyup)=\"applyFilter($event)\" placeholder=\"search...\" #searchValue>\n</mat-form-field>\n\n<div class=\"mat-elevation-z8\">\n<table mat-table [dataSource]=\"dataSource\" matSort style=\"width: 100%;\">\n\n    <ng-container matColumnDef=\"selectColumn\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"font-weight: bolder;\">Select</th>\n    <td mat-cell *matCellDef=\"let row;\">\n        <button (click)=\"deletePressedOnKey(row.key)\" mat-icon-button title=\"{{iconTitle}}\">\n            <mat-icon style=\"font-size: 24px;\">{{iconName}}</mat-icon>\n        </button>\n    </td>\n    </ng-container>\n        \n    <ng-container matColumnDef=\"{{columnHeader}}\" *ngFor=\"let columnHeader of displayedColumns; let i=index\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"font-weight: bolder;\">{{columnHeader}}</th>\n    <td mat-cell *matCellDef=\"let row\">{{row.rowdata[i].data}}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"allColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: allColumns;\"></tr>\n\n    <!-- Row shown when there is no matching data. -->\n    <tr class=\"mat-row\" *matNoDataRow>\n    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{searchValue.value}}\"</td>\n    </tr>\n</table>\n<mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BaseForm } from '../base-comps/commonforms';\nimport { CommonCallsService } from 'src/assets/domainmodel/common-calls.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ResultRow, CellInfo } from '../results-table/results-table.component';\nimport { Application, ClientRole, CreateClientRoleRequest, RequestStatusInformation, DeleteClientRoleRequest } from 'src/assets/domainmodel/appsecuritymodel';\nimport { SecMgmtApiClientService } from 'src/assets/domainmodel/sec-mgmt-api-client.service';\nimport { FormControl } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-role-management',\n  templateUrl: './role-management.component.html',\n  styleUrls: ['./role-management.component.css']\n})\nexport class RoleManagementComponent extends BaseForm implements OnInit {\n\n  objectName = new FormControl('');\n  objectDescription = new FormControl ('');\n  appIdentifier: string;\n\n  viewableObjects = new Array<ClientRole> ();\n  viewableApps = new Array<Application>();\n  currentKey: string;\n  \n  displayedColumns = ['RoleName','Description','Owner App'];\n  dataSource = new MatTableDataSource<ResultRow>(this.formResults);\n\n  callService: CommonCallsService;\n  managementClient: SecMgmtApiClientService;\n\n  constructor(callService: CommonCallsService,client: SecMgmtApiClientService)\n  {\n    super(); \n    this.callService = callService;\n    this.managementClient = client;\n  }\n\n  rowSelected (key: string)\n  {\n    this.currentKey = key;\n    if (this.currentKey != undefined)\n    {\n      this.viewableObjects.forEach(element=>{\n          if (element.name == this.currentKey)\n          {\n              let rr = element;            \n              if (rr != undefined)\n              {\n                if (rr.appIdentifier == null || rr.appIdentifier.length <= 0)\n                    this.appIdentifier = \"GLOBAL\"\n                  else \n                  this.appIdentifier = rr.appIdentifier;\n      \n                  this.objectDescription.setValue(rr.description);\n                  this.objectName.setValue(rr.name);\n                  this.setInfoMessage(\"Updated selected value..\");\n              }\n              return;\n          }\n      });\n    }\n  }\n\n  updateObject ()\n  {\n     let car = new CreateClientRoleRequest ();\n     car.description = this.objectDescription.value;\n     car.appIdentifier = this.appIdentifier;\n     if (car.appIdentifier == \"GLOBAL\")\n     car.appIdentifier = null;\n     car.name = this.objectName.value;\n     this.managementClient.createClientRole(car).subscribe(value=>{\n        console.log(value.status.statusMessage);\n        if (value.status.statusCode == RequestStatusInformation.standardSuccessCode)\n          this.setInfoMessage(value.status.statusMessage)\n          else\n          this.setErrorMessage(value.status.statusMessage);\n        this.loadViewableObjects();\n     }, error => {\n      console.log(JSON.stringify(error));\n      this.setErrorMessage(\"Failed to create/update record.. check browser console for logs\");\n     });\n  }\n\n  deleteObject ()\n  {\n     let car = new DeleteClientRoleRequest ();\n     car.name = this.objectName.value;\n     this.managementClient.deleteClientRole(car).subscribe(value=>{\n        console.log(value.status.statusMessage);\n        if (value.status.statusCode == RequestStatusInformation.standardSuccessCode)\n          this.setInfoMessage(value.status.statusMessage)\n          else\n          this.setErrorMessage(value.status.statusMessage);\n        this.loadViewableObjects();\n     },error=>{\n      console.log(JSON.stringify(error));\n      this.setErrorMessage(\"Failed to delete action.. check browser console for logs\");\n     });\n  }\n\n  loadViewableApps ()\n  {\n    this.viewableApps.length = 0;\n    let app = new Application();\n    app.appIdentifier=\"GLOBAL\";\n    app.shortIdentifier=\"GLOBAL\";\n    this.viewableApps.push(app);\n    this.callService.loadViewableApps().then(values=>{\n      values.forEach(element=>{\n        this.viewableApps.push(element);\n      })\n    });\n  }\n\n  loadViewableObjects ()\n  {\n    this.viewableObjects.length=0;\n    this.formResults.length = 0;\n    this.callService.loadViewableClientRoles().then(values=>{\n      values.forEach(element=>{\n        this.viewableObjects.push(element);\n        let ci = new Array<CellInfo> ();\n        ci.push(new CellInfo(element.name));\n        ci.push(new CellInfo(element.description));\n        ci.push(new CellInfo(element.appIdentifier));\n        let rr = new ResultRow(element.name,ci);\n        this.formResults.push(rr);\n      })\n      this.dataSource.data=this.formResults;\n    });\n  }\n\n  ngOnInit(): void \n  {\n    this.formTitle=\"Manage Roles\"\n    this.loadViewableApps();\n    this.loadViewableObjects();\n  }  \n\n}\n","<title>{{formTitle}}</title>\n<app-info-block [errorClass]=\"'errorMessage'\" [infoClass]=\"'infoMessage'\" [messages]=\"messages\" [informationBlockTitle]=\"'Information !'\"></app-info-block>\n<p></p>\n<table class=\"section-title\">\n    <tr>\n        <td class=\"section-heading\">{{formTitle}}</td>\n    </tr>\n</table>\n<p></p>\n<table class=\"form-main-square-back\">\n<tr>\n    <td>\n        <table class=\"form-main-square-front\">\n            <tr> <!-- Row for form elements-->\n                    <td>\n                        <mat-form-field>\n                            <mat-label>Role</mat-label>\n                            <input matInput placeholder=\"Unique Role Name\" [formControl]=\"objectName\">\n                        </mat-form-field>\n                        <br/>\n                        <mat-form-field>\n                            <mat-label>Resource Description</mat-label>\n                            <textarea matInput placeholder=\"describe the role..\" [formControl]=\"objectDescription\"></textarea>\n                        </mat-form-field>\n                        <br/>\n                        <br/>\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Associated App</mat-label>\n                            <mat-select [(value)]=\"appIdentifier\">\n                              <mat-option *ngFor=\"let item of viewableApps\" [value]=\"item.appIdentifier\">\n                                {{item.appIdentifier}}\n                              </mat-option>\n                            </mat-select>\n                          </mat-form-field>                        \n                        <br/>\n                        <br/>\n                    </td>\n            </tr>\n            <tr>    <!-- Row for buttons-->\n                <td>\n                        <button (click)=\"updateObject()\" mat-icon-button title=\"Save Record\">\n                            Save<mat-icon style=\"font-size: 24px;\">save</mat-icon>\n                        </button>\n                </td>\n                <td>\n                        <button (click)=\"deleteObject()\" mat-icon-button title=\"Delete Record\">\n                            Delete<mat-icon style=\"font-size: 24px;\">delete</mat-icon>\n                        </button>\n                </td>\n            </tr>\n        </table>\n    </td>\n</tr>\n</table>\n<p></p>\n<!-- Results -->\n<table class=\"section-heading\">\n    <tr>\n        <td class=\"section-title\">Existing Records</td>\n    </tr>\n</table>\n<app-results-table (currentRowSelected)=\"rowSelected($event)\" [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"></app-results-table>","import { Component, OnInit } from '@angular/core';\nimport { BaseForm } from '../base-comps/commonforms';\nimport { ClientGroup, ClientRole, ClientGroupRole, Scope, Application, Domain, DeleteClientGroupRoleRequest, RequestStatusInformation, CreateClientGroupRoleRequest, SearchClientGroupRoleRequest, Permission, ClientRolePermission, DeleteClientRolePermissionRequest, CreateClientRolePermissionRequest, SearchClientRolePermissionRequest } from 'src/assets/domainmodel/appsecuritymodel';\nimport { CommonCallsService } from 'src/assets/domainmodel/common-calls.service';\nimport { SecMgmtApiClientService } from 'src/assets/domainmodel/sec-mgmt-api-client.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ResultRow, CellInfo } from '../results-table/results-table.component';\nimport { timestamp } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-role-to-permissions',\n  templateUrl: './role-to-permissions.component.html',\n  styleUrls: ['./role-to-permissions.component.css']\n})\nexport class RoleToPermissionsComponent extends BaseForm implements OnInit \n{\n  \n  callService: CommonCallsService;\n  managementClient: SecMgmtApiClientService;\n\n  constructor(callService: CommonCallsService,client: SecMgmtApiClientService)\n  {\n    super(); \n    this.callService = callService;\n    this.managementClient = client;\n  }\n  \n  // The selected group name.\n  roleName = new FormControl('');\n\n  // selected permission name\n  permissionName: string;\n\n  // the selected appidentifier\n  appIdentifier: string;\n\n  // the selected permission value..\n  permissionValue: string; // allow,deny\n\n  permissionValues = [\"allow\",\"deny\"];\n\n  // The roles that are available to be assigned.\n  viewableRoles: Array<ClientRole> = new Array<ClientRole>();\n\n  // The groups that are viewable by the person.\n  viewablePermissions: Array<Permission> = new Array<Permission>();\n\n  // THe objects that we are managing.\n  viewableObjects     = new Array<ClientRolePermission> ();\n\n  viewableApps        = new Array<Application>();\n\n  currentKey: string;\n  \n  displayedColumns = ['RoleName','Permission','Value','Owner App'];\n  dataSource = new MatTableDataSource<ResultRow>(this.formResults);\n\n  rowSelected (key: string)\n  {\n    this.currentKey = key;\n    if (this.currentKey != undefined)\n    {\n      let dcgr = new DeleteClientRolePermissionRequest ();\n      dcgr.key = this.currentKey;\n      this.managementClient.deleteClientRolePermission(dcgr).subscribe(element=>{\n\n        if (element.status.statusCode == RequestStatusInformation.standardSuccessCode)\n        {\n          this.pushInfoMessage(element.status.statusMessage);\n        }\n        else\n        {\n          this.pushErrorMessage(element.status.statusMessage);\n        }\n        this.reloadObjects ();\n      },error=>{\n        this.pushErrorMessage(JSON.stringify(error));\n      })\n    }\n  }\n\n  updateObject ()\n  {\n     let car = new CreateClientRolePermissionRequest ();\n     car.roleName = this.roleName.value;\n     car.permissionName = this.permissionName;\n     car.value = this.permissionValue;\n     car.appIdentifier = this.appIdentifier;\n     if (car.appIdentifier == \"GLOBAL\")\n     car.appIdentifier = null;\n     this.managementClient.createClientRolePermission(car).subscribe(value=>{\n        console.log(value.status.statusMessage);\n        if (value.status.statusCode == RequestStatusInformation.standardSuccessCode)\n          this.setInfoMessage(value.status.statusMessage)\n          else\n          this.setErrorMessage(value.status.statusMessage);\n        this.reloadObjects();\n     }, error => {\n      console.log(JSON.stringify(error));\n      this.setErrorMessage(\"Failed to create/update record.. check browser console for logs\");\n     });\n  }\n\n  reloadObjects ()\n  {\n    this.loadViewableObjects ();\n  }\n\n  loadViewableRoles ()\n  {\n    this.viewableRoles.length = 0;\n    this.callService.loadViewableClientRoles().then(values=>{\n      values.forEach(element=>{\n        this.viewableRoles.push(element);\n      })\n    });\n  }\n\n  loadViewablePermissions ()\n  {\n    this.viewablePermissions.length=0;\n    this.callService.loadViewablePermissions().then(values=>{\n      values.forEach(element=>{\n        this.viewablePermissions.push(element);\n      })\n    });\n  }\n\n  loadViewableObjects ()\n  {\n    this.viewableObjects.length = 0;\n    this.formResults.length = 0;\n    if (this.roleName.value == null || this.roleName.value == undefined)\n    return;\n\n    let scgrr = new SearchClientRolePermissionRequest ();\n    scgrr.roleName = this.roleName.value;\n    scgrr.permissionName = this.permissionName;\n    scgrr.appIdentifier = this.appIdentifier;\n    this.managementClient.searchClientRolePermissions(scgrr).subscribe(element=>{\n\n      if (element != null && element.clientRolePermissions != null)\n      {\n         element.clientRolePermissions.forEach(cgr=>{\n          this.viewableObjects.push(cgr);\n          let ci = new Array<CellInfo> ();\n          ci.push(new CellInfo(cgr.roleName));\n          ci.push(new CellInfo(cgr.permissionName));\n          ci.push(new CellInfo(cgr.value));\n          ci.push(new CellInfo(cgr.appIdentifier));\n          let rr = new ResultRow(cgr.key,ci);\n          this.formResults.push(rr);\n         })\n      }\n      this.dataSource.data=this.formResults;\n    })\n  }\n\n  loadViewableApps ()\n  {\n    this.viewableApps.length = 0;\n    let app = new Application();\n    app.appIdentifier=\"GLOBAL\";\n    app.shortIdentifier=\"GLOBAL\";\n    this.viewableApps.push(app);\n    this.callService.loadViewableApps().then(values=>{\n      values.forEach(element=>{\n        this.viewableApps.push(element);\n      })\n    });\n  }\n \n\n  ngOnInit(): void \n  {\n    this.formTitle = \"Manage Role to Permission Mappings.\"\n    this.loadViewableRoles ();\n    this.loadViewablePermissions ();\n    this.loadViewableObjects ();\n    this.loadViewableApps ();\n    this.roleName.valueChanges.subscribe(event=>{\n      this.reloadObjects();\n    })\n  }\n\n}\n","<title>{{formTitle}}</title>\n<app-info-block [errorClass]=\"'errorMessage'\" [infoClass]=\"'infoMessage'\" [messages]=\"messages\" [informationBlockTitle]=\"'Information !'\"></app-info-block>\n<p></p>\n<table class=\"section-title\">\n    <tr>\n        <td class=\"section-heading\">{{formTitle}}</td>\n    </tr>\n</table>\n<p></p>\n<table class=\"form-main-square-back\">\n<tr>\n    <td>\n        <table class=\"form-main-square-front\">\n            <tr> <!-- Row for form elements-->\n                    <td>\n                          <mat-form-field appearance=\"fill\">\n                            <mat-label>Role Name</mat-label>\n                            <mat-select [formControl]=\"roleName\">\n                              <mat-option *ngFor=\"let item of viewableRoles\" [value]=\"item.name\">\n                                {{item.name}}\n                              </mat-option>\n                            </mat-select>\n                          </mat-form-field>                        \n                    </td>\n                    <td>\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Permission</mat-label>\n                            <mat-select [(value)]=\"permissionName\">\n                              <mat-option *ngFor=\"let item of viewablePermissions\" [value]=\"item.name\">\n                                {{item.name}}\n                              </mat-option>\n                            </mat-select>\n                          </mat-form-field>                        \n                    </td>    \n                    <td>\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Allow/Deny?</mat-label>\n                            <mat-select [(value)]=\"permissionValue\">\n                              <mat-option *ngFor=\"let item of permissionValues\" [value]=\"item\">\n                                {{item}}\n                              </mat-option>\n                            </mat-select>\n                          </mat-form-field>                        \n                    </td>\n                    <td>\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Associated App</mat-label>\n                            <mat-select [(value)]=\"appIdentifier\">\n                              <mat-option *ngFor=\"let item of viewableApps\" [value]=\"item.appIdentifier\">\n                                {{item.appIdentifier}}\n                              </mat-option>\n                            </mat-select>\n                          </mat-form-field>\n                    </td>\n            </tr>\n            <tr>    <!-- Row for buttons-->\n                <td>\n                        <button (click)=\"updateObject()\" mat-icon-button title=\"Save Record\">\n                            Save<mat-icon style=\"font-size: 24px;\">save</mat-icon>\n                        </button>\n                </td>\n            </tr>\n        </table>\n    </td>\n</tr>\n</table>\n<p></p>\n<!-- Results -->\n<table class=\"section-heading\">\n    <tr>\n        <td class=\"section-title\">Existing Records</td>\n    </tr>\n</table>\n<app-results-table  [iconTitle]=\"'Delete this Record'\" [iconName]=\"'delete'\"   (currentRowSelected)=\"rowSelected($event)\" [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"></app-results-table>","import { Component, OnInit } from '@angular/core';\nimport { BaseForm } from '../base-comps/commonforms';\nimport { CommonCallsService } from 'src/assets/domainmodel/common-calls.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ResultRow, CellInfo } from '../results-table/results-table.component';\nimport { Application, Domain, CreateDomainRequest, RequestStatusInformation, DeleteDomainRequest, DomainType, ScopeType, Scope, CreateScopeRequest, DeleteScopeRequest } from 'src/assets/domainmodel/appsecuritymodel';\nimport { SecMgmtApiClientService } from 'src/assets/domainmodel/sec-mgmt-api-client.service';\nimport { FormControl } from '@angular/forms';\nimport { timestamp } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-scope-management',\n  templateUrl: './scope-management.component.html',\n  styleUrls: ['./scope-management.component.css']\n})\nexport class ScopeManagementComponent extends BaseForm implements OnInit {\n\n  // The type of Scope that you are creating..\n  scopeType: string;\n\n  objectName = new FormControl('');\n  objectDescription = new FormControl ('');\n  objectValue = new FormControl('');\n\n  appIdentifier: string;\n\n  viewableObjects     = new Array<Scope> ();\n  viewableApps        = new Array<Application>();\n  viewableScopeTypes = new Array<ScopeType>();\n\n  currentKey: string;\n  \n  displayedColumns = ['Name','Type','Value','Description','Owner App'];\n  dataSource = new MatTableDataSource<ResultRow>(this.formResults);\n\n  callService: CommonCallsService;\n  managementClient: SecMgmtApiClientService;\n\n  constructor(callService: CommonCallsService,client: SecMgmtApiClientService)\n  {\n    super(); \n    this.callService = callService;\n    this.managementClient = client;\n  }\n\n  rowSelected (key: string)\n  {\n    this.currentKey = key;\n    if (this.currentKey != undefined)\n    {\n      this.viewableObjects.forEach(element=>{\n          if (element.scopeName == this.currentKey)\n          {\n              let rr = element;            \n              if (rr != undefined)\n              {\n                if (rr.appIdentifier == null || rr.appIdentifier.length <= 0)\n                    this.appIdentifier = \"GLOBAL\"\n                  else \n                  this.appIdentifier = rr.appIdentifier;\n\n                  this.scopeType = rr.scopeType;\n\n                  this.objectDescription.setValue(rr.description);\n                  this.objectName.setValue(rr.scopeName);\n                  this.setInfoMessage(\"Updated selected value..\");\n              }\n              return;\n          }\n      });\n    }\n  }\n\n  updateObject ()\n  {\n     let car = new CreateScopeRequest ();\n     car.name = this.objectName.value;\n     car.description = this.objectDescription.value;\n     car.value = this.objectValue.value;\n     car.scopeType = this.scopeType;\n     car.appIdentifier = this.appIdentifier;\n     if (car.appIdentifier == \"GLOBAL\")\n     car.appIdentifier = null;\n     this.managementClient.createScope(car).subscribe(value=>{\n        console.log(value.status.statusMessage);\n        if (value.status.statusCode == RequestStatusInformation.standardSuccessCode)\n          this.setInfoMessage(value.status.statusMessage)\n          else\n          this.setErrorMessage(value.status.statusMessage);\n        this.loadViewableObjects();\n     }, error => {\n      console.log(JSON.stringify(error));\n      this.setErrorMessage(\"Failed to create/update record.. check browser console for logs\");\n     });\n  }\n\n  deleteObject ()\n  {\n     let car = new DeleteScopeRequest ();\n     car.name = this.objectName.value;\n     this.managementClient.deleteScope(car).subscribe(value=>{\n        console.log(value.status.statusMessage);\n        if (value.status.statusCode == RequestStatusInformation.standardSuccessCode)\n          this.setInfoMessage(value.status.statusMessage)\n          else\n          this.setErrorMessage(value.status.statusMessage);\n        this.loadViewableObjects();\n     },error=>{\n      console.log(JSON.stringify(error));\n      this.setErrorMessage(\"Failed to delete record.. check browser console for logs\");\n     });\n  }\n\n  loadViewableApps ()\n  {\n    this.viewableApps.length = 0;\n    let app = new Application();\n    app.appIdentifier=\"GLOBAL\";\n    app.shortIdentifier=\"GLOBAL\";\n    this.viewableApps.push(app);\n    this.callService.loadViewableApps().then(values=>{\n      values.forEach(element=>{\n        this.viewableApps.push(element);\n      })\n    });\n  }\n\n\n  loadViewableScopeTypes ()\n  {\n    this.viewableScopeTypes.length = 0;\n    this.callService.loadViewableScopeTypes().then(values=>{\n      if (values != null) \n      {\n        values.forEach(element=>{\n          this.viewableScopeTypes.push(element);\n        })\n      }\n\n    });\n  }\n\n  loadViewableObjects ()\n  {\n    this.viewableObjects.length=0;\n    this.formResults.length = 0;\n    this.callService.loadViewableScopes().then(values=>{\n      if (values != null)\n      {\n        values.forEach(element=>{\n          this.viewableObjects.push(element);\n          let ci = new Array<CellInfo> ();\n          ci.push(new CellInfo(element.scopeName));\n          ci.push(new CellInfo(element.scopeType));\n          ci.push(new CellInfo(element.scopeValue));\n          ci.push(new CellInfo(element.description));\n          ci.push(new CellInfo(element.appIdentifier));\n          let rr = new ResultRow(element.scopeName,ci);\n          this.formResults.push(rr);\n        })\n      }\n\n      this.dataSource.data=this.formResults;\n      \n    });\n  }\n\n  ngOnInit(): void \n  {\n    this.formTitle=\"Manage Scopes\"\n    this.loadViewableApps();\n    this.loadViewableScopeTypes();\n    this.loadViewableObjects();\n  }  \n\n\n}\n","<title>{{formTitle}}</title>\n<app-info-block [errorClass]=\"'errorMessage'\" [infoClass]=\"'infoMessage'\" [messages]=\"messages\" [informationBlockTitle]=\"'Information !'\"></app-info-block>\n<p></p>\n<table class=\"section-title\">\n    <tr>\n        <td class=\"section-heading\">{{formTitle}}</td>\n    </tr>\n</table>\n<p></p>\n<table class=\"form-main-square-back\">\n<tr>\n    <td>\n        <table class=\"form-main-square-front\">\n            <tr> <!-- Row for form elements-->\n                    <td>\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>ScopeType</mat-label>\n                            <mat-select [(value)]=\"scopeType\">\n                              <mat-option *ngFor=\"let item of viewableScopeTypes\" [value]=\"item.name\">\n                                {{item.name}}\n                              </mat-option>\n                            </mat-select>\n                          </mat-form-field>                        \n                        <br/>\n                        <mat-form-field>\n                            <mat-label>Scope Name</mat-label>\n                            <input matInput placeholder=\"Unique Name\" [formControl]=\"objectName\">\n                        </mat-form-field>\n                        <br/>\n                        <mat-form-field>\n                            <mat-label>Value</mat-label>\n                            <textarea matInput placeholder=\"set the values..\" [formControl]=\"objectValue\"></textarea>\n                        </mat-form-field>\n                        <br/>\n                        <mat-form-field>\n                            <mat-label>Description</mat-label>\n                            <textarea matInput placeholder=\"describe the scope..\" [formControl]=\"objectDescription\"></textarea>\n                        </mat-form-field>\n                        <br/>\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Associated App</mat-label>\n                            <mat-select [(value)]=\"appIdentifier\">\n                              <mat-option *ngFor=\"let item of viewableApps\" [value]=\"item.appIdentifier\">\n                                {{item.appIdentifier}}\n                              </mat-option>\n                            </mat-select>\n                          </mat-form-field>                        \n                        <br/>\n                    </td>\n            </tr>\n            <tr>    <!-- Row for buttons-->\n                <td>\n                        <button (click)=\"updateObject()\" mat-icon-button title=\"Save Record\">\n                            Save<mat-icon style=\"font-size: 24px;\">save</mat-icon>\n                        </button>\n                </td>\n                <td>\n                        <button (click)=\"deleteObject()\" mat-icon-button title=\"Delete Record\">\n                            Delete<mat-icon style=\"font-size: 24px;\">delete</mat-icon>\n                        </button>\n                </td>\n            </tr>\n        </table>\n    </td>\n</tr>\n</table>\n<p></p>\n<!-- Results -->\n<table class=\"section-heading\">\n    <tr>\n        <td class=\"section-title\">Existing Records</td>\n    </tr>\n</table>\n<app-results-table (currentRowSelected)=\"rowSelected($event)\" [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"></app-results-table>","import { Component, OnInit } from '@angular/core';\nimport { BaseForm } from '../base-comps/commonforms';\nimport { FormControl } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ResultRow, CellInfo } from '../results-table/results-table.component';\nimport { CommonCallsService } from 'src/assets/domainmodel/common-calls.service';\nimport { SecMgmtApiClientService } from 'src/assets/domainmodel/sec-mgmt-api-client.service';\nimport { ScopeType, Application, CreateScopeTypeRequest, RequestStatusInformation, DeleteScopeTypeRequest } from 'src/assets/domainmodel/appsecuritymodel';\n\n@Component({\n  selector: 'app-scope-type-management',\n  templateUrl: './scope-type-management.component.html',\n  styleUrls: ['./scope-type-management.component.css']\n})\nexport class ScopeTypeManagementComponent extends BaseForm implements OnInit {\n\n  objectName = new FormControl('');\n  objectDescription = new FormControl ('');\n  appIdentifier: string;\n\n  viewableObjects = new Array<ScopeType> ();\n  viewableApps = new Array<Application>();\n  currentKey: string;\n  \n  displayedColumns = ['ScopeType','Owner App'];\n  dataSource = new MatTableDataSource<ResultRow>(this.formResults);\n\n  callService: CommonCallsService;\n  managementClient: SecMgmtApiClientService;\n\n  constructor(callService: CommonCallsService,client: SecMgmtApiClientService)\n  {\n    super(); \n    this.callService = callService;\n    this.managementClient = client;\n  }\n\n  rowSelected (key: string)\n  {\n    this.currentKey = key;\n    if (this.currentKey != undefined)\n    {\n      this.viewableObjects.forEach(element=>{\n          if (element.name == this.currentKey)\n          {\n              let rr = element;            \n              if (rr != undefined)\n              {\n                if (rr.appIdentifier == null || rr.appIdentifier.length <= 0)\n                    this.appIdentifier = \"GLOBAL\"\n                  else \n                  this.appIdentifier = rr.appIdentifier;\n      \n                  // this.objectDescription.setValue(rr.description);\n                  this.objectName.setValue(rr.name);\n                  this.setInfoMessage(\"Updated selected value..\");\n              }\n              return;\n          }\n      });\n    }\n  }\n\n  updateObject ()\n  {\n     let car = new CreateScopeTypeRequest ();\n     // car.description = this.objectDescription.value;\n     car.appIdentifier = this.appIdentifier;\n     if (car.appIdentifier == \"GLOBAL\")\n     car.appIdentifier = null;\n     car.name = this.objectName.value;\n     this.managementClient.createScopeType(car).subscribe(value=>{\n        console.log(value.status.statusMessage);\n        if (value.status.statusCode == RequestStatusInformation.standardSuccessCode)\n          this.setInfoMessage(value.status.statusMessage)\n          else\n          this.setErrorMessage(value.status.statusMessage);\n        this.loadViewableObjects();\n     }, error => {\n      console.log(JSON.stringify(error));\n      this.setErrorMessage(\"Failed to create/update record.. check browser console for logs\");\n     });\n  }\n\n  deleteObject ()\n  {\n     let car = new DeleteScopeTypeRequest ();\n     car.name = this.objectName.value;\n     this.managementClient.deleteScopeType(car).subscribe(value=>{\n        console.log(value.status.statusMessage);\n        if (value.status.statusCode == RequestStatusInformation.standardSuccessCode)\n          this.setInfoMessage(value.status.statusMessage)\n          else\n          this.setErrorMessage(value.status.statusMessage);\n        this.loadViewableObjects();\n     },error=>{\n      console.log(JSON.stringify(error));\n      this.setErrorMessage(\"Failed to delete record.. check browser console for logs\");\n     });\n  }\n\n  loadViewableApps ()\n  {\n    this.viewableApps.length = 0;\n    let app = new Application();\n    app.appIdentifier=\"GLOBAL\";\n    app.shortIdentifier=\"GLOBAL\";\n    this.viewableApps.push(app);\n    this.callService.loadViewableApps().then(values=>{\n      values.forEach(element=>{\n        this.viewableApps.push(element);\n      })\n    });\n  }\n\n  loadViewableObjects ()\n  {\n    this.viewableObjects.length=0;\n    this.formResults.length = 0;\n    this.callService.loadViewableScopeTypes().then(values=>{\n      if (values != null)\n      {\n        values.forEach(element=>{\n          this.viewableObjects.push(element);\n          let ci = new Array<CellInfo> ();\n          ci.push(new CellInfo(element.name));\n          // ci.push(new CellInfo(element.description));\n          ci.push(new CellInfo(element.appIdentifier));\n          let rr = new ResultRow(element.name,ci);\n          this.formResults.push(rr);\n        })\n      }\n      this.dataSource.data=this.formResults;\n    });\n  }\n\n  ngOnInit(): void \n  {\n    this.formTitle=\"Manage Scope Types\"\n    this.loadViewableApps();\n    this.loadViewableObjects();\n  }\n\n}\n","<title>{{formTitle}}</title>\n<app-info-block [errorClass]=\"'errorMessage'\" [infoClass]=\"'infoMessage'\" [messages]=\"messages\" [informationBlockTitle]=\"'Information !'\"></app-info-block>\n<p></p>\n<table class=\"section-title\">\n    <tr>\n        <td class=\"section-heading\">{{formTitle}}</td>\n    </tr>\n</table>\n<p></p>\n<table class=\"form-main-square-back\">\n<tr>\n    <td>\n        <table class=\"form-main-square-front\">\n            <tr> <!-- Row for form elements-->\n                    <td>\n                        <mat-form-field>\n                            <mat-label>Scope Type</mat-label>\n                            <input matInput placeholder=\"Unique Identifier\" [formControl]=\"objectName\">\n                        </mat-form-field>\n                        <br/>\n                        <br/>\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Associated App</mat-label>\n                            <mat-select [(value)]=\"appIdentifier\">\n                              <mat-option *ngFor=\"let item of viewableApps\" [value]=\"item.appIdentifier\">\n                                {{item.appIdentifier}}\n                              </mat-option>\n                            </mat-select>\n                          </mat-form-field>                        \n                        <br/>\n                        <br/>\n                    </td>\n            </tr>\n            <tr>    <!-- Row for buttons-->\n                <td>\n                        <button (click)=\"updateObject()\" mat-icon-button title=\"Save Record\">\n                            Save<mat-icon style=\"font-size: 24px;\">save</mat-icon>\n                        </button>\n                </td>\n                <td>\n                        <button (click)=\"deleteObject()\" mat-icon-button title=\"Delete Record\">\n                            Delete<mat-icon style=\"font-size: 24px;\">delete</mat-icon>\n                        </button>\n                </td>\n            </tr>\n        </table>\n    </td>\n</tr>\n</table>\n<p></p>\n<!-- Results -->\n<table class=\"section-heading\">\n    <tr>\n        <td class=\"section-title\">Existing Records</td>\n    </tr>\n</table>\n<app-results-table (currentRowSelected)=\"rowSelected($event)\" [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\"></app-results-table>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.css']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>spinner works!</p>\n","import { Component, OnInit, Input } from '@angular/core';\n\n\n\n\n@Component({\n  selector: 'app-table-menu',\n  templateUrl: './table-menu.component.html',\n  styleUrls: ['./table-menu.component.css']\n})\nexport class TableMenuComponent implements OnInit {\n\n  @Input () menuItems: Array<MenuItem>;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  getWidth (index: number): string\n  {\n    return \"20%\";\n  }\n\n  anyItems (): boolean\n  {\n    if (this.menuItems == undefined || this.menuItems.length <= 0)\n    return false;\n    else\n    return true;\n  }\n\n}\n\nexport class MenuItem\n{\n    itemName: string;\n    itemTitle: string;\n    itemLink: string;\n    imageLink: string;\n\n    constructor (itemName: string,itemTitle: string,itemLink: string)\n    {\n      this.itemName = itemName;\n      this.itemLink = itemLink;\n      this.itemTitle = itemTitle;\n    }\n}","<div class=\"{{anyItems()?'hiddenItem':'visibleItem'}}\">Nothing to display, no menu items.</div>\n<div class=\"{{anyItems()?'visibleItem':'hiddenItem'}}\">\n<table class=\"table-menu-main-square-back\">\n\t<tr>\n\t\t<td>\n\t\t\t<table class=\"table-menu-main-square-front\">\n\t\t\t    <tr>\n                    <td class=\"table-menu-outer-cell\" *ngFor=\"let item of menuItems\">\n                        <center>\n                        <a routerLink=\"{{item.itemLink}}\" routerLinkActive=\"active\" title=\"{{item.itemTitle}}\">\n                            <mat-icon aria-hidden=\"false\" class=\"{{(item.imageLink == undefined || item.imageLink == null)?'hiddenItem':'mat-icon'}}\">{{item.imageLink}}</mat-icon>\n                            <br/>\n                            <span style=\"font-size: smaller;\">{{item.itemName}}</span>\n                        </a>\n                        </center>\n                    </td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</td>\n\t</tr>\n</table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport * as sobjs from 'src/assets/domainmodel/appsecuritymodel';\nimport { HttpClient, HttpHeaders, HttpParams, HttpXsrfTokenExtractor } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError, observable, pipe } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { ContextMgmtApiClientService } from 'src/assets/domainmodel/context-mgmt-api-client.service';\nimport { MenuItem } from 'src/app/table-menu/table-menu.component'\nimport { BaseForm } from 'src/app/base-comps/commonforms'\nimport {LoaderServiceService} from 'src/app/loader-service.service';\n\n\n\n@Component({\n  selector: 'app-topbar',\n  templateUrl: './topbar.component.html',\n  styleUrls: ['./topbar.component.css']\n})\nexport class TopbarComponent extends BaseForm implements OnInit \n{\n  apiClient:  ContextMgmtApiClientService;\n  spinBarVisibility: boolean = false;\n\n  loggedInUser: string = \"NotloggedIn\";\n\n  constructor(client: ContextMgmtApiClientService,private loadService: LoaderServiceService)\n  { \n    super ();\n    this.apiClient = client;\n  }\n\n  allMenuItems: Array<MenuItem> = new Array<MenuItem>();\n  \n  setUpMenuBasedOnPermission (secApiRequest: sobjs.SecurityAPIRequest,resources: string[],mi: Array<MenuItem>): void\n  {\n      secApiRequest.resources = resources;\n      let observable = this.apiClient.hasPermissions(secApiRequest);\n      observable.subscribe((value: sobjs.SecurityAPIResponse) => {\n        let count = 0;\n        if (value.results != null)\n        {\n          value.results.forEach(element => {\n            if (element == true)\n            {\n              this.allMenuItems.push(mi[count]);\n              count++;\n            }\n          });\n        }\n      });\n  }\n\n  figureOutMenutItems ()\n  {\n      this.allMenuItems.length = 0; // Clear the menu Items.\n      let secApiRequest = new sobjs.SecurityAPIRequest ();\n      secApiRequest.action = sobjs.SecurityActions.READ;\n      let resources = new Array<string>();\n      let menuItems = new Array<MenuItem>();\n\n      {\n        let item = new MenuItem(\"Actions\",\"Manage Actions\",\"/actionManagement\");\n        item.imageLink=\"rowing\";\n        resources.push(sobjs.SecurityResources.ACTION);\n        menuItems.push(item);\n      }\n\n      {\n        let item = new MenuItem(\"Applications\",\"Manage Applications\",\"/appManagement\");\n        resources.push(sobjs.SecurityResources.APPLICATION);\n        item.imageLink=\"apps\";\n        menuItems.push(item);\n      }\n\n      {\n        let item = new MenuItem(\"Clients\",\"Manage clients\",\"/clientManagement\");\n        resources.push(sobjs.SecurityResources.CLIENT);\n        item.imageLink=\"person\";\n        menuItems.push(item);\n      }\n\n      {\n        let item = new MenuItem(\"Permissions\",\"Manage Permissions\",\"/permissionManagement\");\n        resources.push(sobjs.SecurityResources.PERMISSION);\n        item.imageLink=\"lock\";\n        menuItems.push(item);\n      }\n      \n      {\n        let item = new MenuItem(\"Resources\",\"Manage Resources\",\"/resourceManagement\");\n        resources.push(sobjs.SecurityResources.RESOURCE);\n        item.imageLink=\"grain\";\n        menuItems.push(item);\n      }\n\n      {\n        let item = new MenuItem(\"Domains\",\"Manage resource actions\",\"/domainManagement\");\n        resources.push(sobjs.SecurityResources.RESOURCE_DOMAIN);\n        item.imageLink=\"public\";\n        menuItems.push(item);\n      }\n\n      {\n        let item = new MenuItem(\"Groups\",\"Manage Client Groups\",\"/clientGroupManagement\");\n        resources.push(sobjs.SecurityResources.CLIENT_GROUP);\n        item.imageLink=\"group\";\n        menuItems.push(item);\n      }\n\n      {\n        let item = new MenuItem(\"Group-Roles\",\"Manage Role that Groups have\",\"/groupRoleManagement\");\n        resources.push(sobjs.SecurityResources.GROUP_ROLE_MEMBERSHIP);\n        item.imageLink=\"recent_actors\";\n        menuItems.push(item);\n      }\n\n\n      {\n        let item = new MenuItem(\"Roles\",\"Manage Roles\",\"/clientRoleManagement\");\n        resources.push(sobjs.SecurityResources.CLIENT_ROLE);\n        item.imageLink=\"school\";\n        menuItems.push(item);\n      }\n\n      {\n        let item = new MenuItem(\"Role to Permission\",\"Manage Roles to Permission Mapping\",\"/rolePermissionManagement\");\n        resources.push(sobjs.SecurityResources.PERMISSION_ROLE_MEMBERSHIP);\n        item.imageLink=\"psychology\";\n        menuItems.push(item);\n      }\n\n      {\n        let item = new MenuItem(\"Scope-Types\",\"Manage types of scopes in the system.\",\"/scopetypeManagement\");\n        resources.push(sobjs.SecurityResources.SCOPE_TYPE);\n        item.imageLink=\"panorama_vertical\";\n        menuItems.push(item);\n\n      }\n\n      {\n        let item = new MenuItem(\"Scope\",\"Manage scopes in the system.\",\"/scopeManagement\");\n        resources.push(sobjs.SecurityResources.ROLE_SCOPE);\n        item.imageLink=\"panorama_horizontal\";\n        menuItems.push(item);\n\n      }\n\n      {\n        let item = new MenuItem(\"Memberships\",\"Manage Group Memberships\",\"/clientToGroups\");\n        resources.push(sobjs.SecurityResources.CLIENT_GROUP_MEMBERSHIP);\n        item.imageLink=\"group_add\";\n        menuItems.push(item);\n      }\n\n      {\n        let item = new MenuItem(\"Domain-Types\",\"Manage Resource Domain Types\",\"/domaintypeManagement\");\n        resources.push(sobjs.SecurityResources.RESOURCE_DOMAIN_TYPE);\n        item.imageLink=\"grain\";\n        menuItems.push(item);\n      }\n\n      this.setUpMenuBasedOnPermission(secApiRequest,resources,menuItems);\n  }\n\n  figureOutLoggedInUser ()\n  {\n    let req = new sobjs.SecurityAPIRequest();\n    this.apiClient.getSecurityContext(req).subscribe(element=>{\n      if (element.status.statusCode = sobjs.RequestStatusInformation.standardSuccessCode)\n      {\n      this.loggedInUser = element.clientSecurityContext.client.clientIdentifier;\n      if (this.loggedInUser == null || this.loggedInUser.length<=0)\n        this.loggedInUser = \"Unknown.\";\n    } else \n      {\n        this.loggedInUser=\"Error fetching user info.\";\n      }\n      },pipe=>{\n      this.loggedInUser=\"Error!\";\n    })   \n  }\n\n  ngOnInit(): void \n  {\n      this.figureOutLoggedInUser ();\n      this.figureOutMenutItems();\n      console.log(\"Subscribing to the loadService..\");\n      this.loadService.httpProgress().subscribe(element=>{\n          this.spinBarVisibility = element;\n      });\n  }\n}","<div id=\"applogo\">\r\n    <table style=\"width: 100%;\">\r\n        <tr>\r\n            <td style=\"text-align:  left; width: 10%;\">\r\n                <h2>\r\n                    <mat-icon style=\"font-size: 50px;\">admin_panel_settings</mat-icon>\r\n                </h2>\r\n            </td>\r\n            <td style=\"text-align:  left; width: 50%;\">\r\n                <h2>Application Security Management Console</h2>\r\n            </td>\r\n            <td style=\"text-align: right; font-size: smaller; width: 20%;\">\r\n                Logged user: {{loggedInUser}}\r\n            </td>\r\n            <td style=\"width: 10%;\">\r\n                <mat-spinner *ngIf=\"spinBarVisibility\" [diameter]=\"20\"></mat-spinner>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n<app-table-menu [menuItems]=\"allMenuItems\"></app-table-menu>","/**\r\n * All the data structures..\r\n */\r\n\r\nexport class ClientSecurityContext\r\n{\r\n\t// The client for which this SecurityContext is present.\r\n\tclient: AppClient;\r\n}\r\n \r\nexport class Domain\r\n{\r\n\r\n\t/**\r\n\t * Domain Name\r\n\t */\r\n\tname: string;\r\n\t\r\n\t/**\r\n\t * Domain Type\r\n\t */\r\n\tdomainType: string;\r\n\t\r\n\t/**\r\n\t * Parent DOmain\r\n\t */\r\n\tparentDomain: string;\r\n\t\r\n\t/**\r\n\t * Description\r\n\t */\r\n\tdescription: string;\r\n\t\r\n\t/**\r\n\t * Owning application\r\n\t */\r\n\tappIdentifier: string;\r\n\t\r\n\r\n\tconstructor(domainName: string,domainType: string)\r\n\t{\r\n\t\tthis.name=domainName;\r\n\t\tthis.domainType=domainType;\r\n\t}\r\n}\r\n\r\nexport class Scope\r\n{\r\n\tscopeName: string;\r\n\tscopeType: string;\r\n\tscopeValue: string;\r\n\tdescription: string;\r\n\r\n\tconstructor(scopeName: string,scopeType: string,scopeValue: string)\r\n\t{\r\n\t\tthis.scopeName  = scopeName;\r\n\t\tthis.scopeType  = scopeType;\r\n\t\tthis.scopeValue = scopeValue;\r\n\t}\r\n\r\n\t// The owning app.\r\n\tappIdentifier: string;\r\n}\r\n\r\n\r\nexport class ClientGroupRole {\r\n\r\n\t// Unique Key within the system of the association.\r\n\tkey: string;\r\n\r\n\t// Name of the group\r\n\tgroupName: string;\r\n\t\r\n\t// Name of the role;\r\n\troleName: string;\t\r\n\t\r\n\t// Name of the domain if any is associated at this level.\r\n\tdomainName: string;\r\n\t\r\n\t// Name of the scope if any associated.\r\n\tscopeName: string;\r\n\t\r\n\t// Owning app for this association.\r\n\tappIdentifier: string;\r\n\r\n}\r\n\r\nexport class ClientRolePermission \r\n{\r\n\t/**\r\n\t *  Unique Key in the system identifying the relationship.\r\n\t */\r\n\tkey: string;\r\n\t\r\n\t// The role, to which the permission is assigned.\r\n\troleName: string;\r\n\t\r\n\t\r\n\t// The name of the permission in the system\r\n\tpermissionName: string;\r\n\t\r\n\t\r\n\t// The owning app\r\n\tappIdentifier: string;\r\n\t\r\n\t\r\n\t// value of the permission. (allow, deny)\r\n\tvalue: string;\r\n}\r\n\r\nexport class RequestStatusInformation\r\n{\r\n\tstatusCode: string;\r\n\tstatusMessage: string;\r\n\t\r\n\tpublic static standardSuccessCode: string = \"Succeeded\";\r\n\tpublic static standardFailureCode: string = \"Failed\";\r\n\tpublic static standardSuccessMessage: string = \"Operation Succeeded\";\r\n\tpublic static standardFailureMessage: string = \"Operation Failed\";\r\n}\r\n\r\nexport class PagingInformation\r\n{\r\n\t// may be set in request or response\r\n\tcurrentPage: Number;\r\n\t\r\n\t// usually set in requests..\r\n\tpageSize: Number;\r\n\t\r\n\t// may be set in request or response..\r\n\tnoOfPages: Number;\r\n\t\r\n\t// may be set in the response\r\n\ttotalNoOfRecords: Number;\r\n\t\r\n\t// may be set in the response.\r\n\trecordsReturned: Number;\t\r\n}\r\n\r\n\r\n/**\r\n * The different security actions\r\n */\r\nexport class SecurityActions {\r\n\t// CRUD actions..\r\n\tstatic CREATE: string = \"CREATE\";\r\n\tstatic READ: string   = \"READ\";\r\n\tstatic UPDATE: string = \"UPDATE\";\r\n\tstatic DELETE: string = \"DELETE\";\r\n\tstatic ASSUME: string = \"ASSUME\";\r\n}\r\n\r\n/**\r\n * This class contains definitions of items which are the security resources defined by this application.\r\n * They mostly represent rows of data in different tables of the security model. An application which deals\r\n * with a different model will probably have this different.\r\n * @author Saurin Magiawala\r\n *\r\n */\r\nexport class SecurityResources {\r\n\r\n\tstatic APPLICATION: string                = \"APPLICATION\";\r\n\tstatic ACTION: string                     = \"ACTION\";\r\n\tstatic RESOURCE: string                   = \"RESOURCE\";\r\n\tstatic CLIENT: string                     = \"CLIENT\";\r\n\tstatic PERMISSION: string                 = \"PERMISSION\";\r\n\tstatic CLIENT_ROLE: string                = \"CLIENT_ROLE\";\r\n\tstatic CLIENT_GROUP: string               = \"CLIENT_GROUP\";\r\n\tstatic CLIENT_GROUP_MEMBERSHIP: string    = \"CLIENT_GROUP_MEMBERSHIP\";\r\n\tstatic RESOURCE_DOMAIN: string            = \"RESOURCE_DOMAIN\";\r\n\tstatic RESOURCE_DOMAIN_TYPE: string       = \"RESOURCE_DOMAIN_TYPE\";\r\n\tstatic SCOPE_TYPE: string                 = \"SCOPE_TYPE\";\r\n\tstatic ROLE_SCOPE: string                 = \"ROLE_SCOPE\";\r\n\tstatic GROUP_ROLE_MEMBERSHIP:  string     = \"GROUP_ROLE_MEMBERSHIP\";\r\n\tstatic PERMISSION_ROLE_MEMBERSHIP: string = \"PERMISSION_ROLE_MEMBERSHIP\";\r\n}\r\n\r\n\r\n/**\r\n * These are different scopes that can come in play\r\n */\r\nexport class Scopes\r\n{\r\n\t// Client Scopes\r\n\tstatic CLIENT_SCOPE_ALL: string = \"ALL\";\t\t// Indicates ALL records  \r\n\tstatic CLIENT_SCOPE_OWN: string = \"OWN\";\t    // Own Records\r\n\t\r\n\tstatic CLIENT_GROUP_MEMBERSHIP_SCOPE: string = \"CLIENT_GROUP_MEMBERSHIP\";\r\n\tstatic VALUES_SCOPE_TYPE: string = \"VALUES\";\r\n\t\r\n\tstatic clientGroupMembershipScope (value: string): Scope\r\n\t{\r\n\t\treturn new Scope (this.CLIENT_GROUP_MEMBERSHIP_SCOPE,this.VALUES_SCOPE_TYPE,value);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Different domains..\r\n */\r\nexport class Domains\r\n{\r\n\tstatic APP_DOMAIN_TYPE: string = \"AppDomain\";\r\n\t\r\n\tstatic appDomain(domainName: string): Domain\r\n\t{\r\n\t\treturn new Domain (domainName,this.APP_DOMAIN_TYPE);\r\n\t}\r\n\t\r\n}\r\n\r\n// 334064633910\r\n// 061000052\r\n// ksmkhushi\r\n// V537750J\r\n\r\n\r\nexport class Application\r\n{\r\n\tappIdentifier: string;\r\n\tshortIdentifier: string;\r\n\tappDescription: string;\r\n}\r\n\r\nexport class AppClient \r\n{\r\n\t/**\r\n\t * The unique ID by which the client is identified in the system, must be unique in the entire system.\r\n\t */\r\n\tclientIdentifier: string;\r\n\t\r\n\t/**\r\n\t * Description for the client.\r\n\t */\r\n\tdescription: string;\r\n\r\n\t/**\r\n\t * This represents the application which is created and/or is dealing with the client.\r\n\t */\r\n\tappIdentifier: string;  // This could be null, if the client is a global client, or could defined the application for which\r\n\t                  \t\t// it has been defined.\r\n}\r\n\r\nexport class Action\r\n{\r\n\tactionName: string;\r\n\tactionDescription: string;\r\n\tappIdentifier: string;\r\n}\r\n\r\nexport class Resource \r\n{\r\n\t/**\r\n\t * Name of the Resource\r\n\t */\r\n\tname: string;\r\n\t\r\n\t/**\r\n\t * The Description of the resource\r\n\t */\r\n\tdescription: string;\r\n\t\r\n\t/**\r\n\t * The declaring app.\r\n\t */\r\n\tappIdentifier: string;\r\n}\r\n\r\n\r\nexport class ClientGroup \r\n{\r\n\t/**\r\n\t * A unique identifier for the object\r\n\t */\r\n\tname: string;\r\n\t\r\n\t/**\r\n\t * The Description.\r\n\t */\r\n\tdescription: string;\r\n\t\r\n\t/**\r\n\t * The owning app if any associated with the  record.\r\n\t */\r\n\tappIdentifier: string;\r\n}\r\n\r\n\r\nexport class ClientRole\r\n{\r\n\t/**\r\n\t * A unique identifier for the object\r\n\t */\r\n\tname: string;\r\n\t\r\n\t/**\r\n\t * The Description.\r\n\t */\r\n\tdescription: string;\r\n\t\r\n\t/**\r\n\t * The owning app if any associated with the  record.\r\n\t */\r\n\tappIdentifier: string;\r\n}\r\n\r\n\r\nexport class DomainType\r\n{\r\n\t/**\r\n\t * A unique identifier for the object\r\n\t */\r\n\tname: string;\r\n\t\r\n\t/**\r\n\t * The owning app if any associated with the  record.\r\n\t */\r\n\tappIdentifier: string;\r\n}\r\n\r\n\r\nexport class ScopeType\r\n{\r\n\t/**\r\n\t * A unique identifier for the object\r\n\t */\r\n\tname: string;\r\n\t\r\n\t/**\r\n\t * The owning app if any associated with the  record.\r\n\t */\r\n\tappIdentifier: string;\r\n}\r\n\r\n\r\n\r\nexport class Permission\r\n{\r\n\t// The unique identifier.\r\n\tname: string;\r\n\r\n\t/**\r\n\t * THe action of of the permission\r\n\t */\r\n\taction: string;\r\n\r\n\tresource: string;\r\n\r\n\tdescription: string; // The description;\r\n\r\n\tappIdentifier: string; // Owner App.\r\n}\r\n\r\n\r\n/**\r\n * The request and response classes start from here..\r\n */\r\nexport  class BaseRequest\r\n{\r\n\t/**\r\n\t * Unique Calling Client Id;\r\n\t */\r\n\tcallingClientId: string;\r\n\t\r\n\t/**\r\n\t * Additional groups that the client must be assumed to belong to \r\n\t *\r\n\t */\r\n\tgroups: Array<string>;\r\n\r\n\tpagingInfo: PagingInformation;\r\n\r\n}\r\n\r\n\r\nexport class BaseResponse\r\n{\r\n\t\r\n\t// will specific what the status is. (error, or success depending on the code)\r\n\tstatus: RequestStatusInformation;\r\n\t\r\n\t// In case of paging enabled the number of records returned could be held in here..\r\n\tpageInfo: RequestStatusInformation;\r\n}\r\n\r\nexport  class SecurityAPIRequest extends BaseRequest\r\n{\r\n\t/**\r\n\t * Request Parameters - depending on the request some of these would be set.\r\n\t */\r\n\taction: string;\r\n\tresource: string;\r\n\troleName: string;\r\n\tgroupName: string;\r\n\tscope: Scope;\r\n\tresourceDomain: Domain;\t\r\n\r\n\tresources: string [];\r\n}\r\n\r\nexport class SecurityAPIResponse extends BaseResponse\r\n{\r\n\r\n\t/**\r\n\t * Information about the client.\r\n\t */\r\n\tclientSecurityContext: ClientSecurityContext;\r\n\r\n\t/**\r\n\t * Used for true false type of return data..\r\n\t */\r\n\tresult: boolean;\r\n\t\r\n\t// Group Names\r\n\tgroups: Array<string>;\r\n\t\r\n\t// Role Names;\r\n\troles: Array<string>;\r\n\t\r\n\t// Array of scopes\r\n\tscopes: Array<Scope>;\r\n\r\n\tresults: boolean [];\r\n}\r\n\r\nexport class CreateApplicationRequest extends BaseRequest\r\n{\r\n\tappIdentifier: string;\r\n\tappShortIdentifier: string;\r\n\tdescription: string;\r\n}\r\n\r\nexport  class CreateApplicationResponse extends BaseResponse\r\n{\r\n\t\r\n}\r\n\r\nexport class DeleteApplicationRequest extends BaseRequest\r\n{\r\n\tappIdentifier: string;\r\n}\r\n\r\nexport  class DeleteApplicationResponse extends BaseResponse\r\n{\r\n\t\r\n}\r\n\r\n\r\nexport class CreateClientRequest extends BaseRequest \r\n{\r\n\r\n\t/**\r\n\t * The Application ID which is creating this client , if null, it means its a global client.\r\n\t */\r\n\tappIdentifier: string;\r\n\t\r\n\t/**\r\n\t * Unique Identifier for the client.\r\n\t */\r\n\tclientIdentifier: string;\r\n\t\r\n\t\r\n\t/**\r\n\t * The description of the client.\r\n\t */\r\n\tdescription: string;\r\n}\r\n\r\n\r\nexport class SearchClientRequest extends CreateClientRequest{\r\n}\r\n\r\nexport class SearchClientResponse extends BaseResponse {\r\n\tclients: AppClient [];\r\n}\r\n\r\n\r\nexport class CreateClientResponse extends BaseResponse {\r\n}\r\n\r\nexport class DeleteClientRequest extends BaseRequest {\r\n\t/**\r\n\t * Unique Identifier for the client.\r\n\t */\r\n\tclientIdentifier: string;\r\n}\r\n\r\n\r\nexport class DeleteClientResponse extends BaseResponse {\r\n}\r\n\r\n\r\nexport class CreateClientGroupRequest extends BaseRequest {\r\n\t\r\n\tname: string;\r\n\tdescription: string;\r\n\tappIdentifier: string;\r\n}\r\n\r\nexport class CreateClientGroupResponse extends BaseResponse {\r\n\r\n}\r\n\r\nexport class CreateGroupMembershipRequest extends BaseRequest {\r\n\t/**\r\n\t * \r\n\t */\r\n\t\r\n\t\r\n\t/**\r\n\t * The application if any is creating this association..\r\n\t */\r\n\tappIdentifier: string;\r\n\t\r\n\t/**\r\n\t *  The client which needs to be associated.\r\n\t */\r\n\tclientIdentifier: string;\r\n\t\r\n\t/**\r\n\t * The Group which needs to be associated.\r\n\t */\r\n\tclientGroupIdentifier: string;\r\n}\r\n\r\n\r\nexport class CreateGroupMembershipResponse extends BaseResponse {\r\n\r\n}\r\n\r\nexport class DeleteClientGroupRequest extends BaseRequest {\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Name of the group to delete..\r\n\t */\r\n\tname: string;\r\n}\r\n\r\n\r\nexport class DeleteClientGroupResponse extends BaseResponse {\r\n}\r\n\r\nexport class DeleteGroupMembershipRequest extends BaseRequest {\r\n\t/**\r\n\t * \r\n\t */\r\n\tclientGroupIdentifier: string;\r\n\tclientIdentifier: string;\r\n}\r\n\r\n\r\nexport class DeleteGroupMembershipResponse extends BaseResponse {\r\n\t/**\r\n\t * \r\n\t */\r\n}\r\n\r\n\r\nexport class CreateActionRequest extends BaseRequest\r\n{\r\n\tname: string;\r\n\tdescription: string;\r\n\tappIdentifier: string;\r\n}\r\n\r\n\r\nexport class CreateActionResponse extends BaseResponse {\r\n}\r\n\r\n\r\nexport class CreatePermissionRequest extends BaseRequest {\r\n\r\n\t/**\r\n\t * The identifier of the application that will Own ther permit.\r\n\t */\r\n\tappIdentifier: string;\r\n\t\r\n\t/**\r\n\t * The name of the permission\r\n\t */\r\n\tname: string;\r\n\t\r\n\t/**\r\n\t * Description of the permission\r\n\t */\r\n\tdescription: string;\r\n\t\r\n\t/**\r\n\t * actionName for this permission\r\n\t */\r\n\tactionName: string;\r\n\t\r\n\t/**\r\n\t * Resource name for this permission\r\n\t */\r\n\tresourceName: string;\r\n\r\n\r\n\r\n}\r\n\r\nexport class CreatePermissionResponse extends BaseResponse {\r\n}\r\n\r\n\r\n\r\n\r\nexport class CreateResourceRequest extends BaseRequest \r\n{\r\n\tname: string;\r\n\tdescription: string;\r\n\tappIdentifier: string;\r\n}\r\n\r\nexport class CreateResourceResponse extends BaseResponse {\r\n}\r\n\r\n\r\nexport class SearchResourceRequest extends CreateResourceRequest{\r\n}\r\n\r\nexport class SearchResourceResponse extends BaseResponse {\r\n\tresources:  Resource [];\r\n}\r\n\r\nexport class DeleteResourceRequest extends BaseRequest {\r\n\t\r\n\t/**\r\n\t * Name of the resource to be deleted.\r\n\t */\r\n\tname: string;\r\n}\r\n\r\n\r\nexport class DeleteResourceResponse extends BaseResponse {\r\n}\r\n\r\n\r\nexport class DeleteActionRequest extends BaseRequest {\r\n\t/**\r\n\t * The name of the action that needs to be deleted..\r\n\t */\r\n\tname: string;\r\n}\r\n\r\n\r\nexport class DeleteActionResponse extends BaseResponse {\r\n}\r\n\r\n\r\nexport class DeletePermissionRequest extends BaseRequest {\r\n\t/**\r\n\t * The permission name to be deleted..\r\n\t */\r\n\tname: string;\r\n}\r\n\r\n\r\nexport class DeletePermissionResponse extends BaseResponse {\r\n\t\r\n}\r\n\r\n\r\nexport class SearchPermissionRequest extends CreatePermissionRequest {\r\n\r\n}\r\n\r\nexport class SearchPermissionResponse extends BaseResponse {\r\n\r\n\tpermissions: Permission [];\r\n}\r\n\r\nexport class CreateClientGroupRoleRequest extends BaseRequest \r\n{\r\n\t\t// The group,\r\n\t\tgroupName: string;\r\n\t\t\r\n\t\t// The role\r\n\t\troleName: string;\r\n\t\t\r\n\t\t// The domain\r\n\t\tdomainName: string;\r\n\t\t\r\n\t\t// The scope\r\n\t\tscopeName: string;\r\n\t\t\r\n\t\t// The appIdentifier.\r\n\t\tappIdentifier: string;\r\n}\r\n\r\n\r\nexport class CreateClientGroupRoleResponse extends BaseResponse {\r\n}\r\n\r\nexport class CreateClientRolePermissionRequest extends BaseRequest \r\n{\r\n\t// The role, to which the permission is assigned.\r\n\troleName: string;\r\n\t\r\n\t\r\n\t// The name of the permission in the system\r\n\tpermissionName: string;\r\n\t\r\n\t\r\n\t// The owning app\r\n\tappIdentifier: string;\r\n\t\r\n\t\r\n\t// value of the permission. (allow, deny)\r\n\tvalue: string;\r\n}\r\n\r\nexport class CreateClientRolePermissionResponse extends BaseResponse {\r\n}\r\n\r\nexport class DeleteClientRolePermissionRequest extends BaseRequest {\r\n\t// The unique relation ship key in the system.\r\n\tkey: string;\r\n}\r\n\r\nexport class DeleteClientRolePermissionResponse extends BaseResponse {\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport class CreateClientRoleRequest extends BaseRequest \r\n{\r\n\tname: string;\r\n\t\r\n\tdescription: string;\r\n\t\r\n\tappIdentifier: string;\r\n}\r\n\r\n\r\nexport class CreateClientRoleResponse extends BaseResponse {\r\n}\r\n\r\n\r\nexport class DeleteClientGroupRoleRequest extends BaseRequest {\r\n\t// The unique relation ship key in the system.\r\n\tkey: string;\r\n}\r\n\r\n\r\nexport class DeleteClientGroupRoleResponse extends BaseResponse {\r\n}\r\n\r\nexport class DeleteClientRoleRequest extends BaseRequest {\r\n\t\r\n\t name: string;\r\n\t description: string;\r\n\t appIdentifier: string;\r\n}\r\n\r\nexport class DeleteClientRoleResponse extends BaseResponse {\r\n\r\n}\r\n\r\n\r\nexport class CreateDomainRequest extends BaseRequest \r\n{\r\n\t\r\n\t/**\r\n\t * Name of the domain\r\n\t */\r\n\tname: string;\r\n\t\r\n\t/**\r\n\t * Description\r\n\t */\r\n\tdescription: string;\r\n\t\r\n\t\r\n\t/**\r\n\t * Owning App\r\n\t */\r\n\tappIdentifier: string;\r\n\t\r\n\t/**\r\n\t * The Parent Domain.\r\n\t */\r\n\tparentDomain: string;\r\n\t\r\n\t/**\r\n\t * The Type of domain it is.\r\n\t */\r\n\tdomainType: string;\r\n}\r\n\r\nexport class CreateDomainResponse extends BaseResponse {\r\n}\r\n\r\n\r\n\r\n\r\nexport class CreateDomainTypeRequest extends BaseRequest {\r\n\tname: string;\r\n\tappIdentifier: string;\r\n}\r\n\r\n\r\nexport class CreateDomainTypeResponse extends BaseResponse {\r\n}\r\n\r\n\r\n\r\nexport class CreateScopeRequest extends BaseRequest \r\n{\r\n\t// Name of the scope\r\n\tname: string;\r\n\r\n\t// description\r\n\tdescription: string;\r\n\r\n\t// Value of the scope\r\n\tvalue: string;\r\n\r\n\t// Type of scope\r\n\tscopeType: string;\r\n\r\n\t// Owning Application\r\n\tappIdentifier: string;\r\n}\r\n\r\n\r\nexport class CreateScopeResponse extends BaseResponse {\r\n}\r\n\r\nexport class DeleteScopeRequest extends BaseRequest {\r\n\t// The name of the scope to delete.\r\n\tname: string;\r\n}\r\n\r\nexport class DeleteScopeResponse extends BaseResponse {\r\n}\r\n\r\n\r\nexport class SearchScopeRequest extends CreateScopeRequest {\r\n\r\n}\r\n\r\nexport class SearchScopeResponse extends BaseResponse {\r\n\tscopes: Scope [];\r\n}\r\n\r\n\r\n\r\nexport class CreateScopeTypeRequest extends BaseRequest {\r\n\r\n\tname: string;\r\n\tappIdentifier: string;\r\n}\r\n\r\n\r\nexport class CreateScopeTypeResponse extends BaseResponse {\r\n}\r\n\r\n\r\nexport class DeleteDomainRequest extends BaseRequest {\r\n\tname: string;\r\n}\r\n\r\nexport class DeleteDomainResponse extends BaseResponse {\r\n}\r\n\r\nexport class DeleteDomainTypeRequest extends BaseRequest {\r\n\r\n\tname: string;\r\n}\r\n\r\nexport class DeleteDomainTypeResponse extends BaseResponse {\r\n}\r\n\r\n\r\nexport class DeleteScopeTypeRequest extends BaseRequest {\r\n\r\n\tname: string;\r\n}\r\n\r\n\r\nexport class DeleteScopeTypeResponse extends BaseResponse {\r\n}\r\n\r\n\r\nexport class SearchApplicationsRequest extends BaseRequest\r\n{\r\n\tappIdentifier: string;\r\n}\r\n\r\nexport class SearchApplicationsResponse extends BaseResponse {\r\n\r\n\tapplications:  Application [];\r\n}\r\n\r\nexport class SearchActionRequest extends CreateActionRequest{\r\n}\r\n\r\nexport class SearchActionResponse extends BaseResponse {\r\n\tactions:  Action [];\r\n}\r\n\r\nexport class SearchClientGroupRoleRequest extends CreateClientGroupRoleRequest {\r\n}\r\n\r\nexport class SearchClientGroupRoleResponse extends BaseResponse {\r\n\tclientGroupRoles: ClientGroupRole []\r\n}\r\n\r\n\r\nexport class SearchClientGroupRequest extends CreateClientGroupRequest {\r\n\r\n\t// Setting this should get the groups assigned to the client.\r\n\tforClientIdentifier: string;\r\n}\r\n\r\nexport class SearchClientGroupResponse extends BaseResponse{\r\n\tclientGroups: ClientGroup [];\r\n}\r\n\r\n\r\nexport class SearchClientRoleRequest extends CreateClientRoleRequest {\r\n}\r\n\r\nexport class SearchClientRoleResponse extends BaseResponse{\r\n\tclientRoles: ClientRole [];\r\n}\r\n\r\nexport class SearchClientRolePermissionRequest extends CreateClientRolePermissionRequest {\r\n}\r\n\r\nexport class SearchClientRolePermissionResponse extends BaseResponse{\r\n\tclientRolePermissions: ClientRolePermission [];\r\n}\r\n\r\nexport class SearchDomainTypeRequest extends CreateDomainTypeRequest {\r\n}\r\n\r\nexport class SearchDomainTypeResponse extends BaseResponse{\r\n\tdomainTypes: DomainType [];\r\n}\r\n\r\nexport class SearchDomainRequest extends CreateDomainRequest {\r\n}\r\n\r\nexport class SearchDomainResponse extends BaseResponse{\r\n\tdomains: Domain [];\r\n}\r\n\r\nexport class SearchScopeTypeRequest extends CreateScopeTypeRequest {\r\n}\r\n\r\nexport class SearchScopeTypeResponse extends BaseResponse{\r\n\tscopeTypes: ScopeType [];\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams, HttpXsrfTokenExtractor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport * as sobjs from 'src/assets/domainmodel/appsecuritymodel';\nimport { environment } from 'src/environments/environment';\nimport { SecMgmtApiClientService } from 'src/assets/domainmodel/sec-mgmt-api-client.service'\nimport { ContextMgmtApiClientService } from 'src/assets/domainmodel/context-mgmt-api-client.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonCallsService {\n\n  contextClient: ContextMgmtApiClientService;\t\n  managementClient: SecMgmtApiClientService;\n\t\n\tconstructor (mgmtClient: SecMgmtApiClientService,conClient: ContextMgmtApiClientService)\n\t{\n    this.contextClient = conClient;\n    this.managementClient = mgmtClient;\n  }\n\n  async loadViewableApps (): Promise<Array<sobjs.Application>>\n  {\n    let sar = new sobjs.SearchApplicationsRequest;\n    let sarr = await this.managementClient.searchApplications(sar).toPromise();\n    return sarr.applications;\n  }\n\n  async loadViewableActions (): Promise<Array<sobjs.Action>>\n  {\n    let sar = new sobjs.SearchActionRequest();\n    let sarr = await this.managementClient.searchActions(sar).toPromise();\n    return sarr.actions;\n  }\n\n  async loadViewableResources (): Promise<Array<sobjs.Resource>>\n  {\n    let sar = new sobjs.SearchResourceRequest();\n    let sarr = await this.managementClient.searchResources(sar).toPromise();\n    return sarr.resources;\n  }\n\n  async loadViewableClients (): Promise<Array<sobjs.AppClient>>\n  {\n    let sar = new sobjs.SearchClientRequest();\n    let sarr = await this.managementClient.searchClients(sar).toPromise();\n    return sarr.clients;\n  }\n\n\n  async loadViewableClientGroups (): Promise<Array<sobjs.ClientGroup>>\n  {\n    let sar = new sobjs.SearchClientGroupRequest();\n    let sarr = await this.managementClient.searchClientGroups(sar).toPromise();\n    return sarr.clientGroups;\n  }  \n\n  async loadViewableClientRoles (): Promise<Array<sobjs.ClientRole>>\n  {\n    let sar = new sobjs.SearchClientRoleRequest();\n    let sarr = await this.managementClient.searchClientRoles(sar).toPromise();\n    return sarr.clientRoles;\n  } \n  \n  async loadViewableDomainTypes (): Promise<Array<sobjs.DomainType>>\n  {\n    let sar = new sobjs.SearchDomainTypeRequest();\n    let sarr = await this.managementClient.searchDomainTypes(sar).toPromise();\n    return sarr.domainTypes;\n  } \n\n  async loadViewableScopeTypes (): Promise<Array<sobjs.ScopeType>>\n  {\n    let sar = new sobjs.SearchScopeTypeRequest();\n    let sarr = await this.managementClient.searchScopeTypes(sar).toPromise();\n    return sarr.scopeTypes;\n  } \n  \n\n  async loadViewablePermissions (): Promise<Array<sobjs.Permission>>\n  {\n    let sar = new sobjs.SearchPermissionRequest();\n    let sarr = await this.managementClient.searchPermissions(sar).toPromise();\n    return sarr.permissions;\n  }\n  \n  async loadViewableDomains (): Promise<Array<sobjs.Domain>>\n  {\n    let sar = new sobjs.SearchDomainRequest();\n    let sarr = await this.managementClient.searchDomains(sar).toPromise();\n    return sarr.domains;\n  }  \n\n  async loadViewableScopes (): Promise<Array<sobjs.Scope>>\n  {\n    let sar = new sobjs.SearchScopeRequest();\n    let sarr = await this.managementClient.searchScope(sar).toPromise();\n    return sarr.scopes;\n  }  \n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams, HttpXsrfTokenExtractor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport * as sobjs from 'src/assets/domainmodel/appsecuritymodel';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContextMgmtApiClientService {\n\n\tapibaseurl: string;\n\thttp: HttpClient;\t\n\tusername: string;\n\tpassword: string;\n\t\n\tconstructor (httpClient: HttpClient)\n\t{\n\t\tthis.apibaseurl = environment.contextApiBaseUrl;\n\t\tthis.http = httpClient;\n\t\tthis.username = environment.username;\n\t\tthis.password = environment.password;\n\t} \n\n\t/**\n\t * Returns the http options to be appended.\n\t */\n\tgetHttpHeaders (): HttpHeaders\n\t{\n\t\tlet httpHeaders: HttpHeaders;\n\n\t\tif (this.username != null && this.username.length > 0)\n\t\t{\n\t\t\tlet authorizationHeader = \"Basic \" + btoa(this.username+ \":\" + this.password);\n\t\t\t// console.log(\"Authorization header: \" + authorizationHeader);\n\t\t\thttpHeaders = new HttpHeaders({\"Authorization\": authorizationHeader});\n\t\t}\n\t\t\n\t\treturn httpHeaders;\n\t}\n\n\n\tgetHttpOptions ()\n\t{\n\t\tlet body:  \"body\";\n\t\tlet response: \"json\";\n\n\t\tvar httpOptions = {\n\t\t\theaders: this.getHttpHeaders(),\n\t\t\tobserve: body,\n\t\t\tresponseType: response\n\t\t};\n\n\t\treturn httpOptions;\n\t}\n\t \n\thasGroup (request: sobjs.SecurityAPIRequest) : Observable<sobjs.SecurityAPIResponse>\n\t{\n\t\tlet methodUrl = this.apibaseurl + \"/hasGroup\";\n\t\treturn this.http.post<sobjs.SecurityAPIResponse>(methodUrl,request,this.getHttpOptions());\t\n\t}\n\t\n\thasRole (request: sobjs.SecurityAPIRequest) : Observable<sobjs.SecurityAPIResponse>\n\t{\n\t\tlet methodUrl = this.apibaseurl + \"/hasRole\";\n\t\treturn this.http.post<sobjs.SecurityAPIResponse>(methodUrl,request,this.getHttpOptions ());\t\n\t}\n\n\n\thasPermission (request: sobjs.SecurityAPIRequest) : Observable<sobjs.SecurityAPIResponse>\n\t{\n\t\tlet methodUrl = this.apibaseurl + \"/hasPermission\";\n\t\treturn this.http.post<sobjs.SecurityAPIResponse>(methodUrl,request,this.getHttpOptions ());\n\t}\n\n\thasPermissions (request: sobjs.SecurityAPIRequest) : Observable<sobjs.SecurityAPIResponse>\n\t{\n\t\tlet methodUrl = this.apibaseurl + \"/hasPermissions\";\n\t\treturn this.http.post<sobjs.SecurityAPIResponse>(methodUrl,request,this.getHttpOptions());\n\t}\n\n\thasPermissionInScope (request: sobjs.SecurityAPIRequest) : Observable<sobjs.SecurityAPIResponse>\n\t{\n\t\tlet methodUrl = this.apibaseurl + \"/hasPermissionInScope\";\n\n\t\treturn this.http.post<sobjs.SecurityAPIResponse>(methodUrl,request,this.getHttpOptions ());\n\t}\n\n\n\thasPermissionReturnGroups (request: sobjs.SecurityAPIRequest) : Observable<sobjs.SecurityAPIResponse>\n\t{\n\t\tlet methodUrl = this.apibaseurl + \"/hasPermissionReturnGroups\";\n\n\t\treturn this.http.post<sobjs.SecurityAPIResponse>(methodUrl,request,this.getHttpOptions ());\n\t}\n\t\n\thasPermissionReturnRoles (request: sobjs.SecurityAPIRequest) : Observable<sobjs.SecurityAPIResponse>\n\t{\n\t\tlet methodUrl = this.apibaseurl + \"/hasPermissionReturnRoles\";\n\n\t\treturn this.http.post<sobjs.SecurityAPIResponse>(methodUrl,request,this.getHttpOptions ());\n\t}\n\n\thasPermissionReturnScopes (request: sobjs.SecurityAPIRequest) : Observable<sobjs.SecurityAPIResponse>\n\t{\n\t\tlet methodUrl = this.apibaseurl + \"/hasPermissionReturnScopes\";\n\n\t\treturn this.http.post<sobjs.SecurityAPIResponse>(methodUrl,request,this.getHttpOptions ());\n\t}\n\n\tgetSecurityContext (request: sobjs.SecurityAPIRequest) : Observable<sobjs.SecurityAPIResponse>\n\t{\n\t\tlet methodUrl = this.apibaseurl + \"/getSecurityContext\";\n\t\treturn this.http.post<sobjs.SecurityAPIResponse>(methodUrl,request,this.getHttpOptions());\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams, HttpXsrfTokenExtractor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport * as sobjs from 'src/assets/domainmodel/appsecuritymodel';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SecMgmtApiClientService {\n\n\tapibaseurl: string;\n\thttp: HttpClient;\t\n\tusername: string;\n\tpassword: string;\n\t\n\tconstructor (httpClient: HttpClient)\n\t{\n\t\tthis.apibaseurl = environment.managementApiBaseUrl;\n\t\tthis.http = httpClient;\n\t\tthis.username = environment.username;\n\t\tthis.password = environment.password;\n    }\n\n\t/**\n\t * Returns the http options to be appended.\n\t */\n\tgetHttpHeaders (): HttpHeaders\n\t{\n\t\tlet httpHeaders: HttpHeaders;\n\t\tif (this.username != null && this.username.length > 0)\n\t\t{\n\t\t\tlet authorizationHeader = \"Basic \" + btoa(this.username+ \":\" + this.password);\n\t\t\t// console.log(\"Authorization header: \" + authorizationHeader);\n\t\t\thttpHeaders = new HttpHeaders({\"Authorization\": authorizationHeader});\n\t\t}\n\t\t\n\t\treturn httpHeaders;\n\t}\n\n\tgetHttpOptions ()\n\t{\n\t\tlet body:  \"body\";\n\t\tlet response: \"json\";\n\n\t\tvar httpOptions = {\n\t\t\theaders: this.getHttpHeaders(),\n\t\t\tobserve: body,\n\t\t\tresponseType: response\n\t\t};\n\n\t\treturn httpOptions;\n\t}\n\n\n    deleteClient (request: sobjs.DeleteClientRequest): Observable<sobjs.DeleteClientResponse>\n    {\n\t\tlet methodUrl = this.apibaseurl + \"/deleteClient\";\n\t\treturn this.http.post<sobjs.DeleteClientResponse>(methodUrl,request,this.getHttpOptions());\n    }\n\n    createClient (request: sobjs.CreateClientRequest ): Observable<sobjs.CreateClientResponse>\n    {\n\t\tlet methodUrl = this.apibaseurl + \"/createClient\";\n\t\treturn this.http.post<sobjs.CreateClientResponse>(methodUrl,request,this.getHttpOptions ());\n    }\n\n     createApplication (request: sobjs.CreateApplicationRequest): Observable<sobjs.CreateApplicationResponse>\n     {\n\t\tlet methodUrl = this.apibaseurl + \"/createApplication\";\n\t\treturn this.http.post<sobjs.CreateApplicationResponse>(methodUrl,request,this.getHttpOptions ());\n     }\n\n    deleteApplication (request: sobjs.DeleteApplicationRequest): Observable<sobjs.DeleteApplicationResponse>\n    {\n\t\tlet methodUrl = this.apibaseurl + \"/deleteApplication\";\n\t\treturn this.http.post<sobjs.DeleteApplicationResponse>(methodUrl,request,this.getHttpOptions ());\n\n    }\n\n    createAction (request: sobjs.CreateActionRequest): Observable<sobjs.CreateActionResponse>\n    {\n\t\tlet methodUrl = this.apibaseurl + \"/createAction\";\n\t\treturn this.http.post<sobjs.CreateActionResponse>(methodUrl,request,this.getHttpOptions ());\n\n    }\n\n    deleteAction (request: sobjs.DeleteActionRequest): Observable<sobjs.DeleteActionResponse>\n    {\n\t\tlet methodUrl = this.apibaseurl + \"/deleteAction\";\n\t\treturn this.http.post<sobjs.DeleteActionResponse>(methodUrl,request,this.getHttpOptions ());\n    }\n\n    createResource (request: sobjs.CreateResourceRequest): Observable<sobjs.CreateResourceResponse>\n    {\n\t\tlet methodUrl = this.apibaseurl + \"/createResource\";\n\t\treturn this.http.post<sobjs.CreateResourceResponse>(methodUrl,request,this.getHttpOptions ());\n    }\n\n    deleteResource (request: sobjs.DeleteResourceRequest): Observable<sobjs.DeleteResourceResponse>\n    {\n\t\tlet methodUrl = this.apibaseurl + \"/deleteResource\";\n\t\treturn this.http.post<sobjs.DeleteResourceResponse>(methodUrl,request,this.getHttpOptions ());\n    }\n\n    createPermission (request: sobjs.CreatePermissionRequest): Observable<sobjs.CreatePermissionResponse>\n    {\n\t\tlet methodUrl = this.apibaseurl + \"/createPermission\";\n\t\treturn this.http.post<sobjs.CreatePermissionResponse>(methodUrl,request,this.getHttpOptions ());\n    }\n\n    deletePermission (request: sobjs.DeletePermissionRequest): Observable<sobjs.DeletePermissionResponse>\n    {\n\t\tlet methodUrl = this.apibaseurl + \"/deletePermission\";\n\t\treturn this.http.post<sobjs.DeletePermissionResponse>(methodUrl,request,this.getHttpOptions ());\n    }\n\n    createClientGroup (request: sobjs.CreateClientGroupRequest): Observable<sobjs.CreateClientGroupResponse>\n    {\n\t\tlet methodUrl = this.apibaseurl + \"/createClientGroup\";\n\t\treturn this.http.post<sobjs.CreateClientGroupResponse>(methodUrl,request,this.getHttpOptions ());\n    }\n\n    deleteClientGroup (request: sobjs.DeleteClientGroupRequest): Observable<sobjs.DeleteClientGroupResponse>\n    {\n\t\tlet methodUrl = this.apibaseurl + \"/deleteClientGroup\";\n\t\treturn this.http.post<sobjs.DeleteClientGroupResponse>(methodUrl,request,this.getHttpOptions ());\n\t}\n\t\n    createClientRole (request: sobjs.CreateClientRoleRequest): Observable<sobjs.CreateClientRoleResponse>\n    {\n\t\tlet methodUrl = this.apibaseurl + \"/createClientRole\";\n\t\treturn this.http.post<sobjs.CreateClientRoleResponse>(methodUrl,request,this.getHttpOptions ());\n    }\n\n    deleteClientRole (request: sobjs.DeleteClientRoleRequest): Observable<sobjs.DeleteClientRoleResponse>\n    {\n\t\tlet methodUrl = this.apibaseurl + \"/deleteClientRole\";\n\t\treturn this.http.post<sobjs.DeleteClientRoleResponse>(methodUrl,request,this.getHttpOptions ());\n\t}\n\t\n\n    createClientRolePermission (request: sobjs.CreateClientRolePermissionRequest): Observable<sobjs.CreateClientRolePermissionResponse>\n    {\n\t\tlet methodUrl = this.apibaseurl + \"/createClientRolePermission\";\n\t\treturn this.http.post<sobjs.CreateClientRolePermissionResponse>(methodUrl,request,this.getHttpOptions ());\n\n    }\n\n    deleteClientRolePermission (request: sobjs.DeleteClientRolePermissionRequest): Observable<sobjs.DeleteClientRolePermissionResponse>\n    {\n\t\tlet methodUrl = this.apibaseurl + \"/deleteClientRolePermission\";\n\t\treturn this.http.post<sobjs.DeleteClientRolePermissionResponse>(methodUrl,request,this.getHttpOptions ());\n    }\n\n    searchClientRolePermissions (request: sobjs.SearchClientRolePermissionRequest): Observable<sobjs.SearchClientRolePermissionResponse>\n    {\n\t\tlet methodUrl = this.apibaseurl + \"/searchClientRolePermissions\";\n\t\treturn this.http.post<sobjs.SearchClientRolePermissionResponse>(methodUrl,request,this.getHttpOptions ());\n    }\n\n\n    createDomain (request: sobjs.CreateDomainRequest): Observable<sobjs.CreateDomainResponse>\n    {\n\t\tlet methodUrl = this.apibaseurl + \"/createDomain\";\n\t\treturn this.http.post<sobjs.CreateDomainResponse>(methodUrl,request,this.getHttpOptions ());\n\t}\n\t\n    deleteDomain (request: sobjs.DeleteDomainRequest): Observable<sobjs.DeleteDomainResponse>\n    {\n\t\tlet methodUrl = this.apibaseurl + \"/deleteDomain\";\n\t\treturn this.http.post<sobjs.DeleteDomainResponse>(methodUrl,request,this.getHttpOptions ());\n    }\n\n\n    createDomainType (request: sobjs.CreateDomainTypeRequest): Observable<sobjs.CreateDomainTypeResponse>\n    {\n\t\tlet methodUrl = this.apibaseurl + \"/createDomainType\";\n\t\treturn this.http.post<sobjs.CreateDomainTypeResponse>(methodUrl,request,this.getHttpOptions ());\n\t}\n\t\n    deleteDomainType (request: sobjs.DeleteDomainTypeRequest): Observable<sobjs.DeleteDomainTypeResponse>\n    {\n\t\tlet methodUrl = this.apibaseurl + \"/deleteDomainType\";\n\t\treturn this.http.post<sobjs.DeleteDomainTypeResponse>(methodUrl,request,this.getHttpOptions ());\n    }\n\n    createScopeType (request: sobjs.CreateScopeTypeRequest): Observable<sobjs.CreateScopeTypeResponse>\n    {\n\t\tlet methodUrl = this.apibaseurl + \"/createScopeType\";\n\t\treturn this.http.post<sobjs.CreateScopeTypeResponse>(methodUrl,request,this.getHttpOptions ());\n    }\n\n    deleteScopeType (request: sobjs.DeleteScopeTypeRequest): Observable<sobjs.DeleteScopeTypeResponse>\n    {\n\t\tlet methodUrl = this.apibaseurl + \"/deleteScopeType\";\n\t\treturn this.http.post<sobjs.DeleteScopeTypeResponse>(methodUrl,request,this.getHttpOptions ());\n    }\n\n    createScope (request: sobjs.CreateScopeRequest): Observable<sobjs.CreateScopeResponse>\n    {\n\t\tlet methodUrl = this.apibaseurl + \"/createScope\";\n\t\treturn this.http.post<sobjs.CreateScopeResponse>(methodUrl,request,this.getHttpOptions ());\n    }\n\n    deleteScope (request: sobjs.DeleteScopeRequest): Observable<sobjs.DeleteScopeResponse>\n    {\n\t\tlet methodUrl = this.apibaseurl + \"/deleteScope\";\n\t\treturn this.http.post<sobjs.DeleteScopeResponse>(methodUrl,request,this.getHttpOptions ());\n    }\n\n\n    createGroupMembership (request: sobjs.CreateGroupMembershipRequest): Observable<sobjs.CreateGroupMembershipResponse>\n    {\n\t\tlet methodUrl = this.apibaseurl + \"/createGroupMembership\";\n\t\treturn this.http.post<sobjs.CreateGroupMembershipResponse>(methodUrl,request,this.getHttpOptions ());\n    }\n\n    deleteGroupMembership (request: sobjs.DeleteGroupMembershipRequest): Observable<sobjs.DeleteGroupMembershipResponse>\n    {\n        let methodUrl = this.apibaseurl + \"/deleteGroupMembership\";\n\t\treturn this.http.post<sobjs.DeleteGroupMembershipResponse>(methodUrl,request,this.getHttpOptions ());\n\t}\n\t\n\n\tsearchApplications (request: sobjs.SearchApplicationsRequest): Observable<sobjs.SearchApplicationsResponse>\n\t{\n\t\tlet methodUrl = this.apibaseurl + \"/searchApplications\";\n\t\treturn this.http.post<sobjs.SearchApplicationsResponse>(methodUrl,request,this.getHttpOptions ());\n\t}\n\n\tsearchActions (request: sobjs.SearchActionRequest): Observable<sobjs.SearchActionResponse>\n\t{\n\t\tlet methodUrl = this.apibaseurl + \"/searchActions\";\n\t\treturn this.http.post<sobjs.SearchActionResponse>(methodUrl,request,this.getHttpOptions ());\n\t}\n\n\n\tsearchResources (request: sobjs.SearchResourceRequest): Observable<sobjs.SearchResourceResponse>\n\t{\n\t\tlet methodUrl = this.apibaseurl + \"/searchResources\";\n\t\treturn this.http.post<sobjs.SearchResourceResponse>(methodUrl,request,this.getHttpOptions ());\n\t}\n\n\tsearchClients (request: sobjs.SearchClientRequest): Observable<sobjs.SearchClientResponse>\n\t{\n\t\tlet methodUrl = this.apibaseurl + \"/searchClients\";\n\t\treturn this.http.post<sobjs.SearchClientResponse>(methodUrl,request,this.getHttpOptions ());\n\t}\n\n\n\tsearchClientRoles (request: sobjs.SearchClientRoleRequest): Observable<sobjs.SearchClientRoleResponse>\n\t{\n\t\tlet methodUrl = this.apibaseurl + \"/searchClientRoles\";\n\t\treturn this.http.post<sobjs.SearchClientRoleResponse>(methodUrl,request,this.getHttpOptions ());\n\t}\t\n\n\n\tsearchClientGroups (request: sobjs.SearchClientGroupRequest): Observable<sobjs.SearchClientGroupResponse>\n\t{\n\t\tlet methodUrl = this.apibaseurl + \"/searchClientGroups\";\n\t\treturn this.http.post<sobjs.SearchClientGroupResponse>(methodUrl,request,this.getHttpOptions ());\n\t}\t\t\n\n\tsearchScopeTypes (request: sobjs.SearchScopeTypeRequest): Observable<sobjs.SearchScopeTypeResponse>\n\t{\n\t\tlet methodUrl = this.apibaseurl + \"/searchScopeTypes\";\n\t\treturn this.http.post<sobjs.SearchScopeTypeResponse>(methodUrl,request,this.getHttpOptions ());\n\t}\t\t\t\n\n\tsearchDomainTypes (request: sobjs.SearchDomainTypeRequest): Observable<sobjs.SearchDomainTypeResponse>\n\t{\n\t\tlet methodUrl = this.apibaseurl + \"/searchDomainTypes\";\n\t\treturn this.http.post<sobjs.SearchDomainTypeResponse>(methodUrl,request,this.getHttpOptions ());\n\t}\t\t\t\n\n\tsearchPermissions (request: sobjs.SearchPermissionRequest): Observable<sobjs.SearchPermissionResponse>\n\t{\n\t\tlet methodUrl = this.apibaseurl + \"/searchPermissions\";\n\t\treturn this.http.post<sobjs.SearchPermissionResponse>(methodUrl,request,this.getHttpOptions ());\n\t}\t\t\t\n\n\tsearchDomains (request: sobjs.SearchDomainRequest): Observable<sobjs.SearchDomainResponse>\n\t{\n\t\tlet methodUrl = this.apibaseurl + \"/searchDomains\";\n\t\treturn this.http.post<sobjs.SearchDomainResponse>(methodUrl,request,this.getHttpOptions ());\n\t}\t\t\t\n\n\tsearchScope (request: sobjs.SearchScopeRequest): Observable<sobjs.SearchScopeResponse>\n\t{\n\t\tlet methodUrl = this.apibaseurl + \"/searchScopes\";\n\t\treturn this.http.post<sobjs.SearchScopeResponse>(methodUrl,request,this.getHttpOptions ());\n\t}\t\t\t\t\n\n\tsearchClientGroupRoles (request: sobjs.SearchClientGroupRoleRequest): Observable<sobjs.SearchClientGroupRoleResponse>\n\t{\n\t\tlet methodUrl = this.apibaseurl + \"/searchClientGroupRoles\";\n\t\treturn this.http.post<sobjs.SearchClientGroupRoleResponse>(methodUrl,request,this.getHttpOptions ());\n\t}\t\t\t\t\n\n\tcreateClientGroupRole (request: sobjs.CreateClientGroupRoleRequest): Observable<sobjs.CreateClientGroupRoleResponse>\n\t{\n\t\tlet methodUrl = this.apibaseurl + \"/createClientGroupRole\";\n\t\treturn this.http.post<sobjs.CreateClientGroupRoleResponse>(methodUrl,request,this.getHttpOptions ());\n\t}\t\t\t\t\n\n\tdeleteClientGroupRole (request: sobjs.DeleteClientGroupRoleRequest): Observable<sobjs.DeleteClientGroupRoleResponse>\n\t{\n\t\tlet methodUrl = this.apibaseurl + \"/deleteClientGroupRole\";\n\t\treturn this.http.post<sobjs.DeleteClientGroupRoleResponse>(methodUrl,request,this.getHttpOptions ());\n\t}\t\t\t\t\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  contextApiBaseUrl: \"http://localhost:8080/v1/contextapi\",\n  managementApiBaseUrl: \"http://localhost:8080/v1/managementapi\",\n  username: \"saurinya@gmail.com\",\n  password: \"admin\"\n};\n\n\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}